{"version":3,"file":"Overview-dbg.controller.js","names":["Overview","Controller","extend","onInit","_onInit","document","addEventListener","onKeyDown","bind","_onKeyDown","event","key","console","log","getUser","_getUser","userpanel","getView","byId","grouppanel","grouptable","usertable","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","setVisible","groups","getGroupByWord","value","length","exactMatch","forEach","group","displayName","setGroup","oJSONModel","JSONModel","setModel","users","getUserByWord","user","id","setUser","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","map","_ref","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","setDataToTree2","_setGroup","getGroup","setGroupDetails","members","undefined","rolecolltions","getGroupRoles","_getGroupRoles","groupName","roleCollectionsData","getRoleCollections","matchedRoles","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getGroup","oModel","getModel","oBinding","bindContext","setParameter","data","execute","then","oContext","getBoundContext","getObject","catch","oError","error","_getGroupByWord","_getUserByWord","_setDataToTree","treeformat","_ref2","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","groupRoleCollections","_getIASUser","userid","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2","onGroupPress","_onGroupPress","oSelectedItem","oGroupData","onUserPress","_onUserPress","oUserData","onExportUser","_onExportUser","oView","oUserModel","getData","oGroupModel","aCombinedData","userData","userName","givenName","familyName","emails","userType","userUuid","loginTime","passwordStatus","mailVerified","sourceSystem","_ref5","keys","_ref6","aRoles","Array","isArray","aCombinedColumns","label","property","oSettings","workbook","columns","dataSource","fileName","oSpreadsheet","Spreadsheet","build","finally","destroy","onExportGroup","_onExportGroup","oMembersModel","oMembersData","oRolecollectionModel","oRolecollectionData","groupMembers","aExcelData","maxLength","Math","max","i","GroupName","UserID","Role","join","aColumns"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\nimport { foreach } from \"@sap/cds\";\nimport Spreadsheet from \"sap/ui/export/Spreadsheet\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            console.log(\"Pressed Enter\");\n            this.getUser();\n        }\n    }\n    \n    \n\n    \n\n    \n\n\n    public async getUser() {\n    \n\n\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n        const grouptable = this.getView()?.byId(\"grouptable\") as sap.m.panel;\n        const usertable = this.getView()?.byId(\"usertable\") as sap.m.panel;\n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            usertable.setVisible(false);\n            userpanel.setVisible(false)\n            const groups = await this.getGroupByWord(userID);\n            console.log(groups.value.length)\n            if(groups.value.length === 0){\n                MessageToast.show(\"There are no groups that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n\n                //Kan meerdere in lijst zitten maar niet getoond worden omdat er altijd 2 inzitten => Group en Group 2.\n                //Group matches exact maar toch 2 in lijst.\n            } else if(groups.value.length > 1 ){\n                let exactMatch = false;\n    \n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    \n                    return;\n\n                }else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\"); \n                }\n            \n               \n\n\n                //IN ORDE \n            } else if(groups.value.length === 1){\n                console.log(groups.value[0])\n                if(groups.value[0] === \"Group not found\"){\n                    return;\n                }\n                else if(groups.value[0].displayName === userID){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    return;\n                } else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\");\n                }\n            }\n                \n        \n        \n\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            grouptable.setVisible(false);\n            grouppanel.setVisible(false);\n                \n            const users = await this.getUserByWord(userID);\n            console.log(users)\n            if(users.value.length === 0){\n                MessageToast.show(\"There are no Users that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n            } else if(users.value.length > 1){\n                let exactMatch = false;\n    \n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                }else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\"); \n                }\n\n            } else if (users.value.length === 1){\n                console.log(users.value[0])\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                }\n                else if(users.value[0].id === userID){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                } else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\");\n                }\n                \n            }\n            \n        } \n    }\n    \n\n    public async setUser(userID: any){\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        const user: any = await this.getIASUser(userID);\n            \n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await this.getRolecollectionRoles(roleCollection); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            const oJSONModel = new JSONModel({ value: result });\n            this.getView().setModel(oJSONModel, \"groupdetails\");\n\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        }   \n\n        \n        \n       \n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async setGroup(userID: any){\n        const group = await this.getGroup(userID);\n        console.log(group)\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await this.getGroupRoles(group.value[0].displayName);\n        for (const roleCollection of rolecolltions) {\n            const response = await this.getRolecollectionRoles(roleCollection); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }\n        \n        const oJSONModel = new JSONModel({ value: result });\n        this.getView().setModel(oJSONModel, \"rolecollectiondetails\");   \n\n\n\n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async getGroupRoles(groupName: string){\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n\n    public async getGroup(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    public async getGroupByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByWord(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n    public async getUserByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getUserByWord(...)`, undefined, {});\n            oBinding.setParameter(\"id\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n\n\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n        console.log(userdata)\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n\n    public async getRoleCollections(){\n        try {\n\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        console.log(userID)\n        this.setUser(userID);\n\n        \n    }\n\n    public onExportUser(): void {\n        const oView = this.getView();\n        \n        const oUserModel = oView.getModel(\"userModel\") as JSONModel;\n        const oUserData = oUserModel?.getData() || {};\n        console.log(oUserData)\n        const oGroupModel = oView.getModel(\"groupdetails\") as JSONModel;\n        const oGroupData = oGroupModel?.getData() || {};\n    \n        const aCombinedData: any[] = [];\n    \n        const userData = {\n            \"User ID\": oUserData.id || \"\",\n            \"User Name\": oUserData.userName || \"\",\n            \"Full Name\": `${oUserData.name?.givenName || \"\"} ${oUserData.name?.familyName || \"\"}`,\n            \"Email\": oUserData.emails?.[0]?.value || \"\",\n            \"User Type\": oUserData.userType || \"\",\n            \"User UUID\": oUserData.userUuid || \"\",\n            \"Login Time\": oUserData.loginTime || \"\",\n            \"Password Status\": oUserData.passwordStatus || \"\",\n            \"Mail Verified\": oUserData.mailVerified || \"\",\n            \"Source System\": oUserData.sourceSystem || \"\",\n        };\n    \n        Object.entries(oGroupData.value || {}).forEach(([groupName, roleCollections]) => {\n            if (typeof roleCollections === \"object\" && roleCollections !== null && Object.keys(roleCollections).length > 0) {\n                Object.entries(roleCollections).forEach(([roleCollectionName, roles]) => {\n                    const aRoles = Array.isArray(roles) ? roles : [roles];\n                    aRoles.forEach((role) => {\n                        aCombinedData.push({\n                            \"Group\": groupName,\n                            \"Role Collection\": roleCollectionName,\n                            \"Role\": role\n                        });\n                    });\n                });\n            }\n        });\n        aCombinedData[0] = { ...aCombinedData[0], ...userData };        \n        console.log(aCombinedData[0]); \n    \n        const aCombinedColumns = [\n            { label: \"User ID\", property: \"User ID\" },\n            { label: \"User Name\", property: \"User Name\" },\n            { label: \"Full Name\", property: \"Full Name\" },\n            { label: \"Email\", property: \"Email\" },\n            { label: \"User Type\", property: \"User Type\" },\n            { label: \"User UUID\", property: \"User UUID\" },\n            { label: \"Login Time\", property: \"Login Time\" },\n            { label: \"Password Status\", property: \"Password Status\" },\n            { label: \"Mail Verified\", property: \"Mail Verified\" },\n            { label: \"Source System\", property: \"Source System\" },\n            { label: \"Group\", property: \"Group\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aCombinedColumns  \n            },\n            dataSource: Array.isArray(aCombinedData) && aCombinedData.length > 0 ? aCombinedData : [],  \n            fileName: `export.xlsx`  \n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings); \n            oSpreadsheet.build()  \n                .finally(() => oSpreadsheet.destroy());  \n        } catch (error) {\n            console.error(\"Export failed:\", error);  \n        }\n    }\n\n\n\n    public onExportGroup(): void {\n        const oView = this.getView();\n        const oUserModel = oView.getModel(\"groupModel\") as JSONModel;\n        const oGroupData = oUserModel?.getData() || {};\n        const oMembersModel = oView.getModel(\"groupMembersModel\") as JSONModel;\n        const oMembersData = oMembersModel?.getData() || {};\n        const oRolecollectionModel = oView.getModel(\"rolecollectiondetails\") as JSONModel;\n        const oRolecollectionData = oRolecollectionModel?.getData() || {};\n    \n        const roleCollections = oRolecollectionData.value || [];\n        const groupMembers = oGroupData.members || [];\n    \n        let aExcelData: any[] = [];\n        const maxLength = Math.max(groupMembers.length, Object.keys(roleCollections).length);\n    \n        for (let i = 0; i < maxLength; i++) {\n            aExcelData.push({\n                id: i === 0 ? oGroupData.id || \"\" : \"\", // Only show Group ID in the first row\n                GroupName: i === 0 ? oGroupData.displayName || \"\" : \"\", // Only show Group Name in the first row\n                UserID: groupMembers[i]?.value || \"\", \n                \"Display Name\": groupMembers[i]?.display || \"\", \n                \"Role Collection\": Object.keys(roleCollections)[i] || \"\", \n                Role: roleCollections[Object.keys(roleCollections)[i]]?.join(\", \") || \"\" // Join roles in case of multiple\n            });\n        }\n    \n        const aColumns = [\n            { label: \"Group ID\", property: \"id\" },\n            { label: \"Group Name\", property: \"GroupName\" },\n            { label: \"UserID\", property: \"UserID\" },\n            { label: \"Display Name\", property: \"Display Name\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aColumns\n            },\n            dataSource: aExcelData,\n            fileName: `Groups_Export.xlsx`\n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings);\n            oSpreadsheet.build().finally(() => oSpreadsheet.destroy());\n        } catch (error) {\n            console.error(\"Export failed:\", error);\n        }\n    }\n    \n    \n\n   \n\n\n\n}"],"mappings":"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","ignoreList":[]}