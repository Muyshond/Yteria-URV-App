{"version":3,"file":"Overview-dbg.controller.js","names":["Overview","Controller","extend","onInit","_onInit","getUser","_getUser","userpanel","getView","byId","grouppanel","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","key","group","getGroup","console","log","value","setVisible","setGroupDetails","members","undefined","oJSONModel","JSONModel","setModel","result","rolecolltions","getGroupRoles","displayName","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","map","role","name","setDataToTree2","user","getIASUser","length","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","_ref","roleCollections","setDataToTree","_getGroupRoles","groupName","roleCollectionsData","getRoleCollections","matchedRoles","forEach","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getGroup","id","oModel","getModel","oBinding","bindContext","setParameter","data","execute","then","oContext","getBoundContext","getObject","catch","oError","error","_setDataToTree","treeformat","_ref2","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","groups","display","groupRoleCollections","_getIASUser","userid","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","event","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n      \n    }\n\n    \n\n\n    public async getUser() {\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n       \n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            const group = await this.getGroup(userID);\n            console.log(group)\n            if(group.value[0] === \"Group not found\"){\n                MessageToast.show(\"Could not find Group with name \" + userID);\n                grouppanel.setVisible(false);\n                userpanel.setVisible(false);\n                return;\n            }\n            this.setGroupDetails(group.value[0]);\n            const members = group.value[0].members;\n            if(members !== undefined){\n                const oJSONModel = new JSONModel({ members });\n                this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n                \n            }\n            const result: any = {}\n            const rolecolltions = await this.getGroupRoles(group.value[0].displayName);\n            for (const roleCollection of rolecolltions) {\n                const response = await this.getRolecollectionRoles(roleCollection); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[roleCollection] = roles;\n            }   \n\n\n\n            this.setDataToTree2(result);\n            grouppanel.setVisible(true);\n            userpanel.setVisible(false);\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            \n            const user: any = await this.getIASUser(userID);\n            if(user.length === 0){\n                MessageToast.show(\"User with id \" + userID + \" not found.\");\n                grouppanel.setVisible(false);\n                userpanel.setVisible(false);\n                return;\n            }\n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await this.getRolecollectionRoles(roleCollection); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        } \n\n\n\n    }\n    }\n\n\n    public async getGroupRoles(groupName: string){\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n\n    public async getGroup(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n\n    public async getRoleCollections(){\n        try {\n\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n\n\n}"],"mappings":"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","ignoreList":[]}