{"version":3,"file":"Overview-dbg.controller.js","names":["dataService","_interopRequireDefault","__dataService","exportService","__exportService","Overview","Controller","extend","onInit","_onInit","document","addEventListener","onKeyDown","bind","_onKeyDown","event","key","console","log","getUser","_getUser","userpanel","getView","byId","grouppanel","grouptable","usertable","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","setVisible","groups","getGroupByWord","value","length","exactMatch","forEach","group","displayName","setGroup","oJSONModel","JSONModel","setModel","users","getUserByWord","user","id","setUser","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","map","_ref","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","setDataToTree2","_setGroup","getGroup","setGroupDetails","members","undefined","rolecolltions","getGroupRoles","_setDataToTree","data","treeformat","_ref2","groupName","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","oModel","getModel","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","roleCollectionsData","getRoleCollections","groupRoleCollections","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","onSearch","_onSearch","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2","onGroupPress","_onGroupPress","oSelectedItem","oContext","oGroupData","getObject","onUserPress","_onUserPress","oUserData","onExportUser","_onExportUser","oView","onExportGroup","_onExportGroup"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\nimport { foreach } from \"@sap/cds\";\nimport Spreadsheet from \"sap/ui/export/Spreadsheet\";\nimport testService from \"../service/testService\"; \nimport dataService from \"../service/dataService\"; \nimport exportService from \"../service/exportService\"; \n\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            console.log(\"Pressed Enter\");\n            this.getUser();\n        }\n    }\n    \n    \n\n\n    public async getUser() {\n    \n\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n        const grouptable = this.getView()?.byId(\"grouptable\") as sap.m.panel;\n        const usertable = this.getView()?.byId(\"usertable\") as sap.m.panel;\n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            usertable.setVisible(false);\n            userpanel.setVisible(false)\n            const groups = await dataService.getGroupByWord(userID, this.getView());\n            console.log(groups.value.length)\n            if(groups.value.length === 0){\n                MessageToast.show(\"There are no groups that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n\n                //Kan meerdere in lijst zitten maar niet getoond worden omdat er altijd 2 inzitten => Group en Group 2.\n                //Group matches exact maar toch 2 in lijst.\n            } else if(groups.value.length > 1 ){\n                let exactMatch = false;\n    \n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    \n                    return;\n\n                }else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\"); \n                }\n            \n               \n\n\n                //IN ORDE \n            } else if(groups.value.length === 1){\n                console.log(groups.value[0])\n                if(groups.value[0] === \"Group not found\"){\n                    return;\n                }\n                else if(groups.value[0].displayName === userID){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    return;\n                } else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\");\n                }\n            }\n                \n        \n        \n\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            grouptable.setVisible(false);\n            grouppanel.setVisible(false);\n                \n            const users = await dataService.getUserByWord(userID, this.getView());\n            console.log(users)\n            if(users.value.length === 0){\n                MessageToast.show(\"There are no Users that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n            } else if(users.value.length > 1){\n                let exactMatch = false;\n    \n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                }else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\"); \n                }\n\n            } else if (users.value.length === 1){\n                console.log(users.value[0])\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                }\n                else if(users.value[0].id === userID){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                } else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\");\n                }\n                \n            }\n            \n        } \n    }\n    \n\n    public async setUser(userID: any){\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n        \n        const user: any = await dataService.getIASUser(userID, this.getView());\n            console.log(user)\n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            const oJSONModel = new JSONModel({ value: result });\n            this.getView().setModel(oJSONModel, \"groupdetails\");\n\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        }   \n\n        \n        \n       \n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async setGroup(userID: any){\n\n        const group = await dataService.getGroup(userID, this.getView())\n        console.log(group)\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await dataService.getGroupRoles(group.value[0].displayName, this.getView());\n        for (const roleCollection of rolecolltions) {\n            const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }\n        \n        const oJSONModel = new JSONModel({ value: result });\n        this.getView().setModel(oJSONModel, \"rolecollectiondetails\");   \n\n\n\n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n        console.log(userdata)\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await dataService.getRoleCollections(this.getView());\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n\n\n\n\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        console.log(userID)\n        this.setUser(userID);\n    }\n\n    public onExportUser(): void {\n        const oView = this.getView();\n        exportService.onExportUser(oView);\n        \n    }\n\n\n\n    public onExportGroup(): void {\n        const oView = this.getView();\n        exportService.onExportGroup(oView);\n        \n    }\n    \n\n}"],"mappings":"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","ignoreList":[]}