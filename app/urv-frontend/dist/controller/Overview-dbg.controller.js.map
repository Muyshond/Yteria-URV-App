{"version":3,"file":"Overview-dbg.controller.js","names":["dataService","_interopRequireDefault","__dataService","exportService","__exportService","Overview","Controller","extend","onInit","_onInit","document","addEventListener","onKeyDown","bind","view","getView","initialModels","tablegroups","tableusers","groupdetails","rolecollectiondetails","TreeModel","TreeModel2","userModel","groupModel","groupMembersModel","Object","entries","forEach","_ref","name","data","oJSONModel","JSONModel","setModel","_onKeyDown","event","key","getData","_getData","userInput","getUserInput","trim","MessageToast","show","searchMode","getSearchmode","HandleGroupSearch","HandleUserSearch","showBusy","_showBusy","BusyIndicator","hideBusy","_hideBusy","hide","_getUserInput","byId","getValue","_getSearchmode","selectinput","getSelectedItem","mProperties","_HandleGroupSearch","groupID","groups","getGroupByWord","undefined","value","length","clearJsonModel","displayName","setGroup","group","error","_HandleUserSearch","userID","users","getUserByWord","id","setUser","user","_clearJsonModel","modelName","clearAllJsonModels","_clearAllJsonModels","modelNames","model","getModel","setData","onHandleSearchmodeChange","_onHandleSearchmodeChange","searchmode","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","map","_ref2","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","setRoleCollectionDataToTree","_setGroup","getGroup","userpanel","grouppanel","setGroupDetails","members","rolecolltions","getGroupRoles","setGroupDataToTree","_setRoleCollectionDataToTree","treeformat","_ref3","groupName","icon","children","_ref4","roleCollectionName","tree","_setGroupDataToTree","_ref5","console","log","_setUserDetails","oModel","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","roleCollectionsData","getRoleCollections","groupRoleCollections","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","onSearch","_onSearch","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onGroupPress","_onGroupPress","oSelectedItem","oContext","oGroupData","getObject","onUserPress","_onUserPress","oUserData","onExportUser","_onExportUser","oView","onExportGroup","_onExportGroup"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport dataService from \"../service/dataService\"; \nimport exportService from \"../service/exportService\"; \nimport BusyIndicator from \"sap/ui/core/BusyIndicator\";\n\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        const view = this.getView();\n        const initialModels: Record<string, any> = {\n            tablegroups: {  },\n            tableusers: {  },\n            groupdetails: {  },\n            rolecollectiondetails: { },\n            TreeModel: { },\n            TreeModel2: { },\n            userModel: {},\n            groupModel: {},\n            groupMembersModel: {  }\n        };\n\n        Object.entries(initialModels).forEach(([name, data]) => {\n            const oJSONModel = new JSONModel(data);\n            view?.setModel(oJSONModel, name);\n        });\n    }\n\n        //Search for data when enter is pressed.\n    private onKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            this.getData();\n        }\n    }\n    \n    \n    public getData() {\n        const userInput = this.getUserInput();\n        if (userInput.trim() === \"\") { MessageToast.show(\"Please enter a valid ID\"); return } \n\n\n        const searchMode = this.getSearchmode();\n        if (searchMode === \"group\") {\n            this.HandleGroupSearch(userInput);\n        } else if (searchMode === \"user\") {\n            this.HandleUserSearch(userInput);\n        }\n    }\n\n    private showBusy(): void {\n        BusyIndicator.show(0); \n    }\n\n    private hideBusy(): void {\n        BusyIndicator.hide();\n    }\n\n    public getUserInput(){\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        return userInput.getValue();\n    }\n\n    public getSearchmode() {\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        return selectinput.getSelectedItem().mProperties.key;\n    }\n\n\n    public async HandleGroupSearch(groupID: string) {\n        this.showBusy();\n\n        try{        \n            const groups = await dataService.getGroupByWord(groupID, this.getView());\n            if (groups === undefined) {\n                return MessageToast.show(`There went something wrong while trying to fetch the groups`);\n            } else if (groups.value.length === 0) {\n                this.clearJsonModel(\"tablegroups\");\n                return MessageToast.show(`No groups found for \"${groupID}\"`);\n            }else if (groups.value.length === 1){\n                if(groups.value[0] === \"Group not found\"){\n                    return MessageToast.show(`No groups found for \"${groupID}\"`);\n                //exact match => set group directly\n                } else if(groups.value[0].displayName === groupID){\n                    this.setGroup(groupID);\n                    return;\n                //Set groups in table so user can choose\n                } else{\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView()?.setModel(oJSONModel, \"tablegroups\"); \n                    return;\n                }\n            } else if (groups.value.length > 1){\n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === groupID) {\n                        this.setGroup(groupID);\n                        return;\n                    }\n                });\n                const oJSONModel = new JSONModel({ value: groups.value });\n                this.getView()?.setModel(oJSONModel, \"tablegroups\"); \n                return;\n            }\n        } catch (error) {\n            MessageToast.show(`Error fetching groups: ${error}`);\n        } finally {\n            this.hideBusy();\n        }\n    }\n\n    public async HandleUserSearch(userID: string){\n        this.showBusy()\n        try{\n            const users = await dataService.getUserByWord(userID, this.getView());\n            if (users === undefined) {\n                return MessageToast.show(`There went something wrong while trying to fetch the users`);\n            } else if (users.value.length === 0) {\n                this.clearJsonModel(\"tableusers\");\n                return MessageToast.show(`No users found for \"${userID}\"`);\n            } else if (users.value.length === 1){\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                } else if(users.value[0].id === userID){\n                    this.setUser(userID)\n                    return;\n                } else{\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView()?.setModel(oJSONModel, \"tableusers\");\n                }\n            }else if(users.value.length > 1){\n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n\n                        return;\n                    }\n                });\n                const oJSONModel = new JSONModel({ value: users.value });\n                this.getView()?.setModel(oJSONModel, \"tableusers\"); \n            }\n        } catch (error) {\n        MessageToast.show(`Error fetching groups: ${error}`);\n        } finally {\n        this.hideBusy();\n    }\n    }\n    \n    public clearJsonModel(modelName: string): void{\n        const oJSONModel = new JSONModel({ value: null });\n        this.getView()?.setModel(oJSONModel, modelName);\n    }\n\n\n    public clearAllJsonModels(): void {\n        const view = this.getView();\n        const modelNames = [\n        \"tablegroups\",\n        \"tableusers\",\n        \"groupdetails\",\n        \"rolecollectiondetails\",\n        \"TreeModel\",\n        \"TreeModel2\",\n        \"userModel\",\n        \"groupModel\",\n        \"groupMembersModel\"\n        ];\n        modelNames.forEach((name) => {\n            const model = view?.getModel(name) as JSONModel;\n            if (model) {\n                model.setData({});\n            }\n        });\n    }\n\n    public onHandleSearchmodeChange(): void {\n        MessageToast.show(\"Search mode changed\");\n        this.clearAllJsonModels();\n        const searchmode = this.getSearchmode();\n\n        if(searchmode === \"group\"){\n\n        } else if (searchmode === \"user\"){\n\n        } else {\n            MessageToast.show(\"This searchmode is not supported\");\n        }\n    }\n\n\n    public async setUser(userID: any){\n       this.showBusy()\n        try{\n\n        \n        const user: any = await dataService.getIASUser(userID, this.getView());\n        const userdata = user[0]\n        this.setUserDetails(userdata);\n\n        const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata);\n        const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n            group, \n            roleCollections: value\n        }));\n        const result: any = {}\n        for (const { group, roleCollections } of formattedData) {\n            result[group] = {}; \n    \n            for (const roleCollection of roleCollections) {\n                const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[group][roleCollection] = roles;\n        }\n        const oJSONModel = new JSONModel({ value: result });\n        this.getView()?.setModel(oJSONModel, \"groupdetails\");        \n        }   \n\n        this.setRoleCollectionDataToTree(result);\n        return;\n    }finally {\n        this.hideBusy();\n    }\n    }\n\n    public async setGroup(userID: any){\n        this.showBusy()\n        try{\n        const group = await dataService.getGroup(userID, this.getView())\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await dataService.getGroupRoles(group.value[0].displayName, this.getView());\n        for (const roleCollection of rolecolltions) {\n            const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }\n        \n        const oJSONModel = new JSONModel({ value: result });\n        this.getView()?.setModel(oJSONModel, \"rolecollectiondetails\");   \n\n\n\n        this.setGroupDataToTree(result);\n        \n        return;\n        }finally {\n            this.hideBusy();\n        }\n    }\n\n\n    public setRoleCollectionDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setGroupDataToTree(data: Record<string, string[]>) {\n        try{\n            \n            const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n                    name: roleCollectionName,\n                    icon: \"sap-icon://manager\",\n                    children: roles.map((role: string) => ({\n                        name: role,\n                        icon: \"sap-icon://role\"\n                    }))\n                }));\n            this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n        }catch(error ) {\n            console.log(error)\n        }\n        \n    }\n\n     \n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await dataService.getRoleCollections(this.getView());\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n\n        tree.expandToLevel(999); \n\n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    \n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n\n\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        this.setUser(userID);\n    }\n\n    public onExportUser(): void {\n        const oView = this.getView();\n        exportService.onExportUser(oView);\n        \n    }\n\n\n\n    public onExportGroup(): void {\n        const oView = this.getView();\n        exportService.onExportGroup(oView);\n        \n    }\n    \n\n}"],"mappings":"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","ignoreList":[]}