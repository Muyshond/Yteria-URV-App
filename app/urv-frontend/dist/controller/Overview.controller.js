"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel"],function(e,t,o){"use strict";const s=t.extend("urvfrontend.controller.Overview",{onInit:function e(){},getUser:async function t(){const o=this.getView()?.byId("UserID");const s=o.getValue();if(s===""){e.show("Please enter a valid ID");return}const n=await this.getIASUser(s);const r=n.value?.[0];this.setUserDetails(r);const c=await this.getUserCollectionsViaGroup(r);console.log(c);const a=Object.entries(c).map(e=>{let[t,o]=e;return{group:t,roleCollections:o}});const i={};for(const{group:e,roleCollections:t}of a){i[e]={};for(const o of t){const t=await this.getRolecollectionRoles(o);const s=t?.value?.[0];const n=s?.roleReferences?.map(e=>e.name)||[];i[e][o]=n}console.log(i);this.setDataToTree(i)}},setDataToTree:function e(t){const s=Object.entries(t).map(e=>{let[t,o]=e;return{name:t,children:Object.entries(o).map(e=>{let[t,o]=e;return{name:t,children:(o||[]).map(e=>({name:e}))}})}});this.getView()?.setModel(new o({tree:s}),"TreeModel")},setUserDetails:function e(t){let s=this.getView()?.getModel("userModel");if(!s){s=new o;this.getView()?.setModel(s,"userModel")}s.setData(t)},getUserCollectionsViaGroup:async function e(t){console.log(t);const o=t.groups.map(e=>e.display);const s=await this.getRoleCollections();const n=s?.value||[];const r={};o.forEach(e=>{r[e]=[]});n.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const t=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];o.forEach(o=>{if(t.includes(o)){r[o].push(e.name)}})});return r},getIASUser:async function e(t){try{const e=await fetch(`odata/v4/catalog/getIASUser(id='${t}')`);if(!e.ok){throw new Error(`Error! Status: ${e.status}`)}const o=await e.json();console.log("Users:",o);return o}catch(e){console.error("Error :",e)}},getRoleCollections:async function e(){try{const e=await fetch("/odata/v4/catalog/getRoleCollections");if(!e.ok){throw new Error(`Error: ${e.status}`)}const t=await e.json();return t}catch(e){console.error("Error:",e)}},getRolecollectionRoles:async function e(t){try{const e=await fetch(`/odata/v4/catalog/getRoleCollectionRoles(roleCollectionName='${t}')`);if(!e.ok){throw new Error(`Error: ${e.status}`)}const o=await e.json();return o}catch(e){console.error("Error:",e)}},onSearch:function e(t){const o=t.getParameter("newValue")?.toLowerCase()||"";const s=this.byId("RoleTree");s.expandToLevel(999);const n=s.getItems();if(!s)return;if(!o){n.forEach(e=>e.setHighlight("None"));return}n.forEach(e=>{const t=e.getBindingContext("TreeModel");if(t){const n=s.indexOfItem(e);const r=t.getProperty("name").toLowerCase();if(r.includes(o)){console.log(r+o);e.setHighlight("Success")}else{e.setHighlight("None")}}})}});return s});
//# sourceMappingURL=Overview.controller.js.map