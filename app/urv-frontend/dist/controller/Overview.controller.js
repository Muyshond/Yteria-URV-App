"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel"],function(e,t,o){"use strict";const n=t.extend("urvfrontend.controller.Overview",{onInit:function e(){},getUser:async function t(){const n=this.getView()?.byId("byUserId");const s=this.getView()?.byId("bygroup");const r=this.getView()?.byId("UserID");const i=r.getValue();if(i===""){e.show("Please enter a valid ID");return}const c=this.getView()?.byId("select");const l=c.getSelectedItem();if(l.mProperties.key==="group"){const t=await this.getGroup(i);if(t.value[0]==="error fetching group"){e.show("Could not find Group with id "+i);return}this.setGroupDetails(t.value[0]);const r=t.value[0].members;if(r.length!==0){const e=new o({members:r});this.getView()?.setModel(e,"groupMembersModel")}const c={};const l=await this.getGroupRoles(t.value[0].displayName);for(const e of l){const t=await this.getRolecollectionRoles(e);const o=t?.value?.[0];const n=o?.roleReferences?.map(e=>e.name)||[];c[e]=n}this.setDataToTree2(c);s.setVisible(true);n.setVisible(false)}else if(l.mProperties.key==="user"){const t=await this.getIASUser(i);if(t.length===0){e.show("User with id "+i+" not found.");s.setVisible(false);n.setVisible(false);return}const o=t[0];this.setUserDetails(o);const r=await this.getUserCollectionsViaGroup(o);const c=Object.entries(r).map(e=>{let[t,o]=e;return{group:t,roleCollections:o}});const l={};for(const{group:e,roleCollections:t}of c){l[e]={};for(const o of t){const t=await this.getRolecollectionRoles(o);const n=t?.value?.[0];const s=n?.roleReferences?.map(e=>e.name)||[];l[e][o]=s}this.setDataToTree(l);s.setVisible(false);n.setVisible(true)}}},getGroupRoles:async function e(t){const o=await this.getRoleCollections();const n=o?.value||[];const s=[];n.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const o=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];if(o.includes(t)){s.push(e.name)}});return s},getGroup:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getGroups(...)`,undefined,{});o.setParameter("GroupID",t);const n=await o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching Group:",e)});return n}catch(e){console.error("Error:",e)}},setDataToTree:function e(t){const n=Object.entries(t).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://group",children:Object.entries(o).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://manager",children:(o||[]).map(e=>({name:e,icon:"sap-icon://role"}))}})}});this.getView()?.setModel(new o({tree:n}),"TreeModel")},setDataToTree2:function e(t){const n=Object.entries(t).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://manager",children:o.map(e=>({name:e,icon:"sap-icon://role"}))}});this.getView()?.setModel(new o({tree:n}),"TreeModel2")},setUserDetails:function e(t){let n=this.getView()?.getModel("userModel");if(!n){n=new o;this.getView()?.setModel(n,"userModel")}n.setData(t)},setGroupDetails:function e(t){let n=this.getView()?.getModel("groupModel");if(!n){n=new o;this.getView()?.setModel(n,"groupModel")}n.setData(t)},getUserCollectionsViaGroup:async function e(t){const o=t.groups.map(e=>e.display);const n=await this.getRoleCollections();const s=n?.value||[];const r={};o.forEach(e=>{r[e]=[]});s.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const t=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];o.forEach(o=>{if(t.includes(o)){r[o].push(e.name)}})});return r},getIASUser:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getIASUser(...)`,undefined,{});o.setParameter("id",t);const n=o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t.value}).catch(e=>{console.error("Error fetching IAS User:",e)});return n}catch(e){console.error("Error :",e)}},getRoleCollections:async function e(){try{const e=this.getView()?.getModel();const t=e.bindContext(`/getRoleCollections(...)`,undefined,{});const o=t.execute().then(()=>{const e=t.getBoundContext();if(!e){return}const o=e.getObject();return o}).catch(e=>{console.error("Error fetching role collectons:",e)});return o}catch(e){console.error("Error:",e)}},getRolecollectionRoles:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getRoleCollectionRoles(...)`,undefined,{});o.setParameter("roleCollectionName",t);const n=o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching role collecton roles:",e)});return n}catch(e){console.error("Error:",e)}},onSearch:function e(t){const o=t.getParameter("newValue")?.toLowerCase()||"";const n=this.byId("RoleTree");n.expandToLevel(999);const s=n.getItems();if(!n)return;if(!o){s.forEach(e=>e.setHighlight("None"));return}s.forEach(e=>{const t=e.getBindingContext("TreeModel");if(t){const s=n.indexOfItem(e);const r=t.getProperty("name").toLowerCase();if(r.includes(o)){console.log(r+o);e.setHighlight("Success")}else{e.setHighlight("None")}}})},onSearch2:function e(t){const o=t.getParameter("newValue")?.toLowerCase()||"";const n=this.byId("RoleTree2");n.expandToLevel(999);const s=n.getItems();if(!n)return;if(!o){s.forEach(e=>e.setHighlight("None"));return}s.forEach(e=>{const t=e.getBindingContext("TreeModel2");if(t){const s=n.indexOfItem(e);const r=t.getProperty("name").toLowerCase();if(r.includes(o)){console.log(r+o);e.setHighlight("Success")}else{e.setHighlight("None")}}})}});return n});
//# sourceMappingURL=Overview.controller.js.map