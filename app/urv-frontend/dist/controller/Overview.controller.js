"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","../service/dataService","../service/exportService","sap/ui/core/BusyIndicator"],function(e,t,s,o,n,r){"use strict";function i(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const l=i(o);const a=i(n);const c=t.extend("urvfrontend.controller.Overview",{onInit:function e(){document.addEventListener("keydown",this.onKeyDown.bind(this));const t=this.getView();const o={tablegroups:{},tableusers:{},groupdetails:{},rolecollectiondetails:{},TreeModel:{},TreeModel2:{},userModel:{},groupModel:{},groupMembersModel:{}};Object.entries(o).forEach(e=>{let[o,n]=e;const r=new s(n);t?.setModel(r,o)})},onKeyDown:function e(t){if(t.key==="Enter"){this.getData()}},getData:function t(){const s=this.getUserInput();if(s.trim()===""){e.show("Please enter a valid ID");return}const o=this.getSearchmode();if(o==="group"){this.HandleGroupSearch(s)}else if(o==="user"){this.HandleUserSearch(s)}},showBusy:function e(){r.show(0)},hideBusy:function e(){r.hide()},getUserInput:function e(){const t=this.getView()?.byId("UserID");return t.getValue()},getSearchmode:function e(){const t=this.getView()?.byId("select");return t.getSelectedItem().mProperties.key},HandleGroupSearch:async function t(o){this.showBusy();try{const t=await l.getGroupByWord(o,this.getView());if(t===undefined){return e.show(`There went something wrong while trying to fetch the groups`)}else if(t.value.length===0){this.clearJsonModel("tablegroups");return e.show(`No groups found for "${o}"`)}else if(t.value.length===1){if(t.value[0]==="Group not found"){return e.show(`No groups found for "${o}"`)}else if(t.value[0].displayName===o){this.setGroup(o);return}else{const e=new s({value:t.value});this.getView()?.setModel(e,"tablegroups");return}}else if(t.value.length>1){t.value.forEach(e=>{if(e.displayName===o){this.setGroup(o);return}});const e=new s({value:t.value});this.getView()?.setModel(e,"tablegroups");return}}catch(t){e.show(`Error fetching groups: ${t}`)}finally{this.hideBusy()}},HandleUserSearch:async function t(o){this.showBusy();try{const t=await l.getUserByWord(o,this.getView());if(t===undefined){return e.show(`There went something wrong while trying to fetch the users`)}else if(t.value.length===0){this.clearJsonModel("tableusers");return e.show(`No users found for "${o}"`)}else if(t.value.length===1){if(t.value[0]==="User not found"){e.show("user not found");return}else if(t.value[0].id===o){this.setUser(o);return}else{const e=new s({value:t.value});this.getView()?.setModel(e,"tableusers")}}else if(t.value.length>1){t.value.forEach(e=>{if(e.id===o){return}});const e=new s({value:t.value});this.getView()?.setModel(e,"tableusers")}}catch(t){e.show(`Error fetching groups: ${t}`)}finally{this.hideBusy()}},clearJsonModel:function e(t){const o=new s({value:null});this.getView()?.setModel(o,t)},clearAllJsonModels:function e(){const t=this.getView();const s=["tablegroups","tableusers","groupdetails","rolecollectiondetails","TreeModel","TreeModel2","userModel","groupModel","groupMembersModel"];s.forEach(e=>{const s=t?.getModel(e);if(s){s.setData({})}})},onHandleSearchmodeChange:function t(){e.show("Search mode changed");this.clearAllJsonModels();const s=this.getSearchmode();if(s==="group"){}else if(s==="user"){}else{e.show("This searchmode is not supported")}},setUser:async function e(t){this.showBusy();try{const e=await l.getIASUser(t,this.getView());const o=e[0];this.setUserDetails(o);const n=await this.getUserCollectionsViaGroup(o);const r=Object.entries(n).map(e=>{let[t,s]=e;return{group:t,roleCollections:s}});const i={};for(const{group:e,roleCollections:t}of r){i[e]={};for(const s of t){const t=await l.getRolecollectionRoles(s,this.getView());const o=t?.value?.[0];const n=o?.roleReferences?.map(e=>e.name)||[];i[e][s]=n}const o=new s({value:i});this.getView()?.setModel(o,"groupdetails")}this.setRoleCollectionDataToTree(i);return}finally{this.hideBusy()}},setGroup:async function e(t){this.showBusy();try{const e=await l.getGroup(t,this.getView());const o=this.getView()?.byId("byUserId");const n=this.getView()?.byId("bygroup");this.setGroupDetails(e.value[0]);const r=e.value[0].members;if(r!==undefined){const e=new s({members:r});this.getView()?.setModel(e,"groupMembersModel")}const i={};const a=await l.getGroupRoles(e.value[0].displayName,this.getView());for(const e of a){const t=await l.getRolecollectionRoles(e,this.getView());const s=t?.value?.[0];const o=s?.roleReferences?.map(e=>e.name)||[];i[e]=o}const c=new s({value:i});this.getView()?.setModel(c,"rolecollectiondetails");this.setGroupDataToTree(i);return}finally{this.hideBusy()}},setRoleCollectionDataToTree:function e(t){const o=Object.entries(t).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://group",children:Object.entries(s).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://manager",children:(s||[]).map(e=>({name:e,icon:"sap-icon://role"}))}})}});this.getView()?.setModel(new s({tree:o}),"TreeModel")},setGroupDataToTree:function e(t){try{const e=Object.entries(t).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://manager",children:s.map(e=>({name:e,icon:"sap-icon://role"}))}});this.getView()?.setModel(new s({tree:e}),"TreeModel")}catch(e){console.log(e)}},setUserDetails:function e(t){let o=this.getView()?.getModel("userModel");if(!o){o=new s;this.getView()?.setModel(o,"userModel")}o.setData(t)},setGroupDetails:function e(t){let o=this.getView()?.getModel("groupModel");if(!o){o=new s;this.getView()?.setModel(o,"groupModel")}o.setData(t)},getUserCollectionsViaGroup:async function e(t){const s=t.groups.map(e=>e.display);const o=await l.getRoleCollections(this.getView());const n=o?.value||[];const r={};s.forEach(e=>{r[e]=[]});n.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const t=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];s.forEach(s=>{if(t.includes(s)){r[s].push(e.name)}})});return r},onSearch:function e(t){const s=t.getParameter("newValue")?.toLowerCase()||"";const o=this.byId("RoleTree");o.expandToLevel(999);const n=o.getItems();if(!o)return;if(!s){n.forEach(e=>e.setHighlight("None"));return}n.forEach(e=>{const t=e.getBindingContext("TreeModel");if(t){const n=o.indexOfItem(e);const r=t.getProperty("name").toLowerCase();if(r.includes(s)){e.setHighlight("Success")}else{e.setHighlight("None")}}})},onGroupPress:function e(t){const s=t.getParameter("listItem");const o=s.getBindingContext("tablegroups");const n=o.getObject();const r=n.displayName;this.setGroup(r)},onUserPress:function e(t){const s=t.getParameter("listItem");const o=s.getBindingContext("tableusers");const n=o.getObject();const r=n.id;this.setUser(r)},onExportUser:function e(){const t=this.getView();a.onExportUser(t)},onExportGroup:function e(){const t=this.getView();a.onExportGroup(t)}});return c});
//# sourceMappingURL=Overview.controller.js.map