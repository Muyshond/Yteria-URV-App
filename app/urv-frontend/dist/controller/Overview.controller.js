"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/export/Spreadsheet"],function(e,t,o,s){"use strict";const r=t.extend("urvfrontend.controller.Overview",{onInit:function e(){document.addEventListener("keydown",this.onKeyDown.bind(this))},onKeyDown:function e(t){if(t.key==="Enter"){console.log("Pressed Enter");this.getUser()}},getUser:async function t(){const s=this.getView()?.byId("byUserId");const r=this.getView()?.byId("bygroup");const n=this.getView()?.byId("grouptable");const l=this.getView()?.byId("usertable");const i=this.getView()?.byId("UserID");const a=i.getValue();if(a===""){e.show("Please enter a valid ID");return}const c=this.getView()?.byId("select");const u=c.getSelectedItem();if(u.mProperties.key==="group"){l.setVisible(false);s.setVisible(false);const t=await this.getGroupByWord(a);console.log(t.value.length);if(t.value.length===0){e.show("There are no groups that include "+a);r.setVisible(false);n.setVisible(false);s.setVisible(false);l.setVisible(false);return}else if(t.value.length>1){let e=false;t.value.forEach(t=>{if(t.displayName===a){e=true}});if(e){this.setGroup(a);n.setVisible(false);return}else{r.setVisible(false);n.setVisible(true);const e=new o({value:t.value});this.getView().setModel(e,"tablegroups")}}else if(t.value.length===1){console.log(t.value[0]);if(t.value[0]==="Group not found"){return}else if(t.value[0].displayName===a){this.setGroup(a);n.setVisible(false);return}else{r.setVisible(false);n.setVisible(true);const e=new o({value:t.value});this.getView().setModel(e,"tablegroups")}}}else if(u.mProperties.key==="user"){n.setVisible(false);r.setVisible(false);const t=await this.getUserByWord(a);console.log(t);if(t.value.length===0){e.show("There are no Users that include "+a);r.setVisible(false);n.setVisible(false);s.setVisible(false);l.setVisible(false);return}else if(t.value.length>1){let e=false;t.value.forEach(t=>{if(t.id===a){e=true}});if(e){this.setUser(a);l.setVisible(false);return}else{s.setVisible(false);l.setVisible(true);const e=new o({value:t.value});this.getView().setModel(e,"tableusers")}}else if(t.value.length===1){console.log(t.value[0]);if(t.value[0]==="User not found"){e.show("user not found");return}else if(t.value[0].id===a){this.setUser(a);l.setVisible(false);return}else{s.setVisible(false);l.setVisible(true);const e=new o({value:t.value});this.getView().setModel(e,"tableusers")}}}},setUser:async function e(t){const s=this.getView()?.byId("byUserId");const r=this.getView()?.byId("bygroup");const n=await this.getIASUser(t);const l=n[0];this.setUserDetails(l);const i=await this.getUserCollectionsViaGroup(l);const a=Object.entries(i).map(e=>{let[t,o]=e;return{group:t,roleCollections:o}});const c={};for(const{group:e,roleCollections:t}of a){c[e]={};for(const o of t){const t=await this.getRolecollectionRoles(o);const s=t?.value?.[0];const r=s?.roleReferences?.map(e=>e.name)||[];c[e][o]=r}const n=new o({value:c});this.getView().setModel(n,"groupdetails");this.setDataToTree(c);r.setVisible(false);s.setVisible(true)}this.setDataToTree2(c);r.setVisible(true);s.setVisible(false);return},setGroup:async function e(t){const s=await this.getGroup(t);console.log(s);const r=this.getView()?.byId("byUserId");const n=this.getView()?.byId("bygroup");this.setGroupDetails(s.value[0]);const l=s.value[0].members;if(l!==undefined){const e=new o({members:l});this.getView()?.setModel(e,"groupMembersModel")}const i={};const a=await this.getGroupRoles(s.value[0].displayName);for(const e of a){const t=await this.getRolecollectionRoles(e);const o=t?.value?.[0];const s=o?.roleReferences?.map(e=>e.name)||[];i[e]=s}const c=new o({value:i});this.getView().setModel(c,"rolecollectiondetails");this.setDataToTree2(i);n.setVisible(true);r.setVisible(false);return},getGroupRoles:async function e(t){const o=await this.getRoleCollections();const s=o?.value||[];const r=[];s.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const o=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];if(o.includes(t)){r.push(e.name)}});return r},getGroup:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getGroupByName(...)`,undefined,{});o.setParameter("GroupName",t);const s=await o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching Group:",e)});return s}catch(e){console.error("Error:",e)}},getGroupByWord:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getGroupByWord(...)`,undefined,{});o.setParameter("GroupName",t);const s=await o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching Group:",e)});return s}catch(e){console.error("Error catching groups:",e)}},getUserByWord:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getUserByWord(...)`,undefined,{});o.setParameter("id",t);const s=await o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching Group:",e)});return s}catch(e){console.error("Error catching groups:",e)}},setDataToTree:function e(t){const s=Object.entries(t).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://group",children:Object.entries(o).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://manager",children:(o||[]).map(e=>({name:e,icon:"sap-icon://role"}))}})}});this.getView()?.setModel(new o({tree:s}),"TreeModel")},setDataToTree2:function e(t){const s=Object.entries(t).map(e=>{let[t,o]=e;return{name:t,icon:"sap-icon://manager",children:o.map(e=>({name:e,icon:"sap-icon://role"}))}});this.getView()?.setModel(new o({tree:s}),"TreeModel2")},setUserDetails:function e(t){let s=this.getView()?.getModel("userModel");if(!s){s=new o;this.getView()?.setModel(s,"userModel")}s.setData(t);console.log(t)},setGroupDetails:function e(t){let s=this.getView()?.getModel("groupModel");if(!s){s=new o;this.getView()?.setModel(s,"groupModel")}s.setData(t)},getUserCollectionsViaGroup:async function e(t){const o=t.groups.map(e=>e.display);const s=await this.getRoleCollections();const r=s?.value||[];const n={};o.forEach(e=>{n[e]=[]});r.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const t=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];o.forEach(o=>{if(t.includes(o)){n[o].push(e.name)}})});return n},getIASUser:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getIASUser(...)`,undefined,{});o.setParameter("id",t);const s=o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t.value}).catch(e=>{console.error("Error fetching IAS User:",e)});return s}catch(e){console.error("Error :",e)}},getRoleCollections:async function e(){try{const e=this.getView()?.getModel();const t=e.bindContext(`/getRoleCollections(...)`,undefined,{});const o=t.execute().then(()=>{const e=t.getBoundContext();if(!e){return}const o=e.getObject();return o}).catch(e=>{console.error("Error fetching role collectons:",e)});return o}catch(e){console.error("Error:",e)}},getRolecollectionRoles:async function e(t){try{const e=this.getView()?.getModel();const o=e.bindContext(`/getRoleCollectionRoles(...)`,undefined,{});o.setParameter("roleCollectionName",t);const s=o.execute().then(()=>{const e=o.getBoundContext();if(!e){return}const t=e.getObject();return t}).catch(e=>{console.error("Error fetching role collecton roles:",e)});return s}catch(e){console.error("Error:",e)}},onSearch:function e(t){const o=t.getParameter("newValue")?.toLowerCase()||"";const s=this.byId("RoleTree");s.expandToLevel(999);const r=s.getItems();if(!s)return;if(!o){r.forEach(e=>e.setHighlight("None"));return}r.forEach(e=>{const t=e.getBindingContext("TreeModel");if(t){const r=s.indexOfItem(e);const n=t.getProperty("name").toLowerCase();if(n.includes(o)){console.log(n+o);e.setHighlight("Success")}else{e.setHighlight("None")}}})},onSearch2:function e(t){const o=t.getParameter("newValue")?.toLowerCase()||"";const s=this.byId("RoleTree2");s.expandToLevel(999);const r=s.getItems();if(!s)return;if(!o){r.forEach(e=>e.setHighlight("None"));return}r.forEach(e=>{const t=e.getBindingContext("TreeModel2");if(t){const r=s.indexOfItem(e);const n=t.getProperty("name").toLowerCase();if(n.includes(o)){console.log(n+o);e.setHighlight("Success")}else{e.setHighlight("None")}}})},onGroupPress:function e(t){const o=t.getParameter("listItem");const s=o.getBindingContext("tablegroups");const r=s.getObject();const n=r.displayName;this.setGroup(n)},onUserPress:function e(t){const o=t.getParameter("listItem");const s=o.getBindingContext("tableusers");const r=s.getObject();const n=r.id;console.log(n);this.setUser(n)},onExportUser:function e(){const t=this.getView();const o=t.getModel("userModel");const r=o?.getData()||{};console.log(r);const n=t.getModel("groupdetails");const l=n?.getData()||{};const i=[];const a={"User ID":r.id||"","User Name":r.userName||"","Full Name":`${r.name?.givenName||""} ${r.name?.familyName||""}`,Email:r.emails?.[0]?.value||"","User Type":r.userType||"","User UUID":r.userUuid||"","Login Time":r.loginTime||"","Password Status":r.passwordStatus||"","Mail Verified":r.mailVerified||"","Source System":r.sourceSystem||""};Object.entries(l.value||{}).forEach(e=>{let[t,o]=e;if(typeof o==="object"&&o!==null&&Object.keys(o).length>0){Object.entries(o).forEach(e=>{let[o,s]=e;const r=Array.isArray(s)?s:[s];r.forEach(e=>{i.push({Group:t,"Role Collection":o,Role:e})})})}});i[0]={...i[0],...a};console.log(i[0]);const c=[{label:"User ID",property:"User ID"},{label:"User Name",property:"User Name"},{label:"Full Name",property:"Full Name"},{label:"Email",property:"Email"},{label:"User Type",property:"User Type"},{label:"User UUID",property:"User UUID"},{label:"Login Time",property:"Login Time"},{label:"Password Status",property:"Password Status"},{label:"Mail Verified",property:"Mail Verified"},{label:"Source System",property:"Source System"},{label:"Group",property:"Group"},{label:"Role Collection",property:"Role Collection"},{label:"Role",property:"Role"}];const u={workbook:{columns:c},dataSource:Array.isArray(i)&&i.length>0?i:[],fileName:`export.xlsx`};try{const e=new s(u);e.build().finally(()=>e.destroy())}catch(e){console.error("Export failed:",e)}},onExportGroup:function e(){const t=this.getView();const o=t.getModel("groupModel");const r=o?.getData()||{};const n=t.getModel("groupMembersModel");const l=n?.getData()||{};const i=t.getModel("rolecollectiondetails");const a=i?.getData()||{};const c=a.value||[];const u=r.members||[];let g=[];const d=Math.max(u.length,Object.keys(c).length);for(let e=0;e<d;e++){g.push({id:e===0?r.id||"":"",GroupName:e===0?r.displayName||"":"",UserID:u[e]?.value||"","Display Name":u[e]?.display||"","Role Collection":Object.keys(c)[e]||"",Role:c[Object.keys(c)[e]]?.join(", ")||""})}const p=[{label:"Group ID",property:"id"},{label:"Group Name",property:"GroupName"},{label:"UserID",property:"UserID"},{label:"Display Name",property:"Display Name"},{label:"Role Collection",property:"Role Collection"},{label:"Role",property:"Role"}];const f={workbook:{columns:p},dataSource:g,fileName:`Groups_Export.xlsx`};try{const e=new s(f);e.build().finally(()=>e.destroy())}catch(e){console.error("Export failed:",e)}}});return r});
//# sourceMappingURL=Overview.controller.js.map