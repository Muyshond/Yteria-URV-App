"use strict";sap.ui.define(["sap/m/MessageToast","sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","../service/dataService","../service/exportService"],function(e,t,s,o,i){"use strict";function n(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const l=n(o);const r=n(i);const a=t.extend("urvfrontend.controller.Overview",{onInit:function e(){document.addEventListener("keydown",this.onKeyDown.bind(this))},onKeyDown:function e(t){if(t.key==="Enter"){console.log("Pressed Enter");this.getUser()}},getUser:async function t(){const o=this.getView()?.byId("byUserId");const i=this.getView()?.byId("bygroup");const n=this.getView()?.byId("grouptable");const r=this.getView()?.byId("usertable");const a=this.getView()?.byId("UserID");const c=a.getValue();if(c===""){e.show("Please enter a valid ID");return}const u=this.getView()?.byId("select");const g=u.getSelectedItem();if(g.mProperties.key==="group"){r.setVisible(false);o.setVisible(false);const t=await l.getGroupByWord(c,this.getView());console.log(t.value.length);if(t.value.length===0){e.show("There are no groups that include "+c);i.setVisible(false);n.setVisible(false);o.setVisible(false);r.setVisible(false);return}else if(t.value.length>1){let e=false;t.value.forEach(t=>{if(t.displayName===c){e=true}});if(e){this.setGroup(c);n.setVisible(false);return}else{i.setVisible(false);n.setVisible(true);const e=new s({value:t.value});this.getView().setModel(e,"tablegroups")}}else if(t.value.length===1){console.log(t.value[0]);if(t.value[0]==="Group not found"){return}else if(t.value[0].displayName===c){this.setGroup(c);n.setVisible(false);return}else{i.setVisible(false);n.setVisible(true);const e=new s({value:t.value});this.getView().setModel(e,"tablegroups")}}}else if(g.mProperties.key==="user"){n.setVisible(false);i.setVisible(false);const t=await l.getUserByWord(c,this.getView());console.log(t);if(t.value.length===0){e.show("There are no Users that include "+c);i.setVisible(false);n.setVisible(false);o.setVisible(false);r.setVisible(false);return}else if(t.value.length>1){let e=false;t.value.forEach(t=>{if(t.id===c){e=true}});if(e){this.setUser(c);r.setVisible(false);return}else{o.setVisible(false);r.setVisible(true);const e=new s({value:t.value});this.getView().setModel(e,"tableusers")}}else if(t.value.length===1){console.log(t.value[0]);if(t.value[0]==="User not found"){e.show("user not found");return}else if(t.value[0].id===c){this.setUser(c);r.setVisible(false);return}else{o.setVisible(false);r.setVisible(true);const e=new s({value:t.value});this.getView().setModel(e,"tableusers")}}}},setUser:async function e(t){const o=this.getView()?.byId("byUserId");const i=this.getView()?.byId("bygroup");const n=await l.getIASUser(t,this.getView());console.log(n);const r=n[0];this.setUserDetails(r);const a=await this.getUserCollectionsViaGroup(r);const c=Object.entries(a).map(e=>{let[t,s]=e;return{group:t,roleCollections:s}});const u={};for(const{group:e,roleCollections:t}of c){u[e]={};for(const s of t){const t=await l.getRolecollectionRoles(s,this.getView());const o=t?.value?.[0];const i=o?.roleReferences?.map(e=>e.name)||[];u[e][s]=i}const n=new s({value:u});this.getView().setModel(n,"groupdetails");this.setDataToTree(u);i.setVisible(false);o.setVisible(true)}this.setDataToTree2(u);i.setVisible(true);o.setVisible(false);return},setGroup:async function e(t){const o=await l.getGroup(t,this.getView());console.log(o);const i=this.getView()?.byId("byUserId");const n=this.getView()?.byId("bygroup");this.setGroupDetails(o.value[0]);const r=o.value[0].members;if(r!==undefined){const e=new s({members:r});this.getView()?.setModel(e,"groupMembersModel")}const a={};const c=await l.getGroupRoles(o.value[0].displayName,this.getView());for(const e of c){const t=await l.getRolecollectionRoles(e,this.getView());const s=t?.value?.[0];const o=s?.roleReferences?.map(e=>e.name)||[];a[e]=o}const u=new s({value:a});this.getView().setModel(u,"rolecollectiondetails");this.setDataToTree2(a);n.setVisible(true);i.setVisible(false);return},setDataToTree:function e(t){const o=Object.entries(t).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://group",children:Object.entries(s).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://manager",children:(s||[]).map(e=>({name:e,icon:"sap-icon://role"}))}})}});this.getView()?.setModel(new s({tree:o}),"TreeModel")},setDataToTree2:function e(t){const o=Object.entries(t).map(e=>{let[t,s]=e;return{name:t,icon:"sap-icon://manager",children:s.map(e=>({name:e,icon:"sap-icon://role"}))}});this.getView()?.setModel(new s({tree:o}),"TreeModel2")},setUserDetails:function e(t){let o=this.getView()?.getModel("userModel");if(!o){o=new s;this.getView()?.setModel(o,"userModel")}o.setData(t);console.log(t)},setGroupDetails:function e(t){let o=this.getView()?.getModel("groupModel");if(!o){o=new s;this.getView()?.setModel(o,"groupModel")}o.setData(t)},getUserCollectionsViaGroup:async function e(t){const s=t.groups.map(e=>e.display);const o=await l.getRoleCollections(this.getView());const i=o?.value||[];const n={};s.forEach(e=>{n[e]=[]});i.forEach(e=>{if(!e.groupReferences&&!e.samlAttributeAssignment){return}const t=[...(e.groupReferences||[]).map(e=>e.attributeValue),...(e.samlAttributeAssignment||[]).map(e=>e.attributeValue)];s.forEach(s=>{if(t.includes(s)){n[s].push(e.name)}})});return n},onSearch:function e(t){const s=t.getParameter("newValue")?.toLowerCase()||"";const o=this.byId("RoleTree");o.expandToLevel(999);const i=o.getItems();if(!o)return;if(!s){i.forEach(e=>e.setHighlight("None"));return}i.forEach(e=>{const t=e.getBindingContext("TreeModel");if(t){const i=o.indexOfItem(e);const n=t.getProperty("name").toLowerCase();if(n.includes(s)){console.log(n+s);e.setHighlight("Success")}else{e.setHighlight("None")}}})},onSearch2:function e(t){const s=t.getParameter("newValue")?.toLowerCase()||"";const o=this.byId("RoleTree2");o.expandToLevel(999);const i=o.getItems();if(!o)return;if(!s){i.forEach(e=>e.setHighlight("None"));return}i.forEach(e=>{const t=e.getBindingContext("TreeModel2");if(t){const i=o.indexOfItem(e);const n=t.getProperty("name").toLowerCase();if(n.includes(s)){console.log(n+s);e.setHighlight("Success")}else{e.setHighlight("None")}}})},onGroupPress:function e(t){const s=t.getParameter("listItem");const o=s.getBindingContext("tablegroups");const i=o.getObject();const n=i.displayName;this.setGroup(n)},onUserPress:function e(t){const s=t.getParameter("listItem");const o=s.getBindingContext("tableusers");const i=o.getObject();const n=i.id;console.log(n);this.setUser(n)},onExportUser:function e(){const t=this.getView();r.onExportUser(t)},onExportGroup:function e(){const t=this.getView();r.onExportGroup(t)}});return a});
//# sourceMappingURL=Overview.controller.js.map