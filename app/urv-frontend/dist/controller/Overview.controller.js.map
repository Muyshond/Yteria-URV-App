{"version":3,"file":"Overview.controller.js","names":["Overview","Controller","extend","onInit","_onInit","getUser","async","_getUser","userInput","this","getView","byId","userID","getValue","MessageToast","show","user","getIASUser","userdata","value","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","console","log","formattedData","Object","entries","map","_ref","group","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","_setDataToTree","data","treeformat","_ref2","groupName","children","_ref3","roleCollectionName","setModel","JSONModel","tree","_setUserDetails","oModel","getModel","setData","_getUserCollectionsViaGroup","userGroups","groups","display","roleCollectionsData","getRoleCollections","groupRoleCollections","forEach","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getIASUser","userid","fetch","ok","Error","status","json","error","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","event","searchword","getParameter","toLowerCase","oBinding","getBinding","oFilter","Filter","path","operator","FilterOperator","Contains","value1","filter","oTree","expandToLevel","collapseAll"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n\n    \n\n\n    public async getUser() {\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return\n        }\n        const user = await this.getIASUser(userID);\n        const userdata = user.value?.[0]\n        //const userGroups = userdata.groups.map((group: any) => group.display); //groups deftig zetten \n        //this.getRolecollectionRoles(\"AuthGroup.Content.Admin\") //test (delete erna)\n        this.setUserDetails(userdata);\n        const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n        console.log(grouprolerelationship)\n\n        const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n            group, \n            roleCollections: value\n\n        }));\n\n        const result: any = {}\n        for (const { group, roleCollections } of formattedData) {\n            result[group] = {}; \n    \n            for (const roleCollection of roleCollections) {\n                const response = await this.getRolecollectionRoles(roleCollection); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[group][roleCollection] = roles;\n        }\n        console.log(result)\n        this.setDataToTree(result);\n\n    }\n}\n\n\n\npublic setDataToTree(data: any) {\n    const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n        name: groupName,\n        children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            children: (roles || []).map((role: string) => ({ name: role }))\n        }))\n    }));\n    \n    this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n}\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        console.log(user)\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    \n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const response = await fetch(`/odata/v4/catalog/getIASUser(id='${userid}')`);\n            if (!response.ok) {\n                throw new Error(`Error! Status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log(\"Users:\", data);\n            return data;\n    \n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n    // public async getUsers() {\n    //     try {\n    //         const response = await fetch(\"/odata/v4/catalog/getIASUsers\");\n    //         if (!response.ok) {\n    //             throw new Error(`Error: ${response.status}`);\n    //         }\n    //         const data = await response.json();\n    //         console.log(\"Fetched Users:\", data);\n    //     } catch (error) {\n    //         console.error(\"Error:\", error);\n    //     }\n    // } \n\n    public async getRoleCollections(){\n        try {\n            const response = await fetch(\"/odata/v4/catalog/getRoleCollections\");\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const response = await fetch(`/odata/v4/catalog/getRoleCollectionRoles(roleCollectionName='${roleCollection}')`);\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        const oBinding = tree.getBinding(\"items\") as sap.ui.model.ListBinding;\n\n        if (searchword) {\n            const oFilter = new Filter({\n                path: \"name\",\n                operator: FilterOperator.Contains,\n                value1: searchword\n            });\n\n            oBinding.filter([oFilter]);\n\n            \n            oTree.expandToLevel(99);\n            \n        } else {\n            oBinding.filter([]);\n            oTree.collapseAll();\n        }\n    }\n\n\n}"],"mappings":"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","ignoreList":[]}