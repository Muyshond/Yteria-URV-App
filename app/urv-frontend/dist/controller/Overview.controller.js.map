{"version":3,"file":"Overview.controller.js","names":["Overview","Controller","extend","onInit","_onInit","document","addEventListener","this","onKeyDown","bind","_onKeyDown","event","key","console","log","getUser","async","_getUser","userpanel","getView","byId","grouppanel","grouptable","usertable","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","setVisible","groups","getGroupByWord","value","length","exactMatch","forEach","group","displayName","setGroup","oJSONModel","JSONModel","setModel","users","getUserByWord","user","id","setUser","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","map","_ref","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","setDataToTree2","_setGroup","getGroup","setGroupDetails","members","undefined","rolecolltions","getGroupRoles","_getGroupRoles","groupName","roleCollectionsData","getRoleCollections","matchedRoles","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getGroup","oModel","getModel","oBinding","bindContext","setParameter","data","execute","then","oContext","getBoundContext","getObject","catch","oError","error","_getGroupByWord","_getUserByWord","_setDataToTree","treeformat","_ref2","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","groupRoleCollections","_getIASUser","userid","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2","onGroupPress","_onGroupPress","oSelectedItem","oGroupData","onUserPress","_onUserPress","oUserData","onExportUser","_onExportUser","oView","oUserModel","getData","oGroupModel","aCombinedData","userData","userName","givenName","familyName","Email","emails","userType","userUuid","loginTime","passwordStatus","mailVerified","sourceSystem","_ref5","keys","_ref6","aRoles","Array","isArray","Group","Role","aCombinedColumns","label","property","oSettings","workbook","columns","dataSource","fileName","oSpreadsheet","Spreadsheet","build","finally","destroy","onExportGroup","_onExportGroup","oMembersModel","oMembersData","oRolecollectionModel","oRolecollectionData","groupMembers","aExcelData","maxLength","Math","max","i","GroupName","UserID","join","aColumns"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\nimport { foreach } from \"@sap/cds\";\nimport Spreadsheet from \"sap/ui/export/Spreadsheet\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            console.log(\"Pressed Enter\");\n            this.getUser();\n        }\n    }\n    \n    \n\n    \n\n    \n\n\n    public async getUser() {\n    \n\n\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n        const grouptable = this.getView()?.byId(\"grouptable\") as sap.m.panel;\n        const usertable = this.getView()?.byId(\"usertable\") as sap.m.panel;\n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            usertable.setVisible(false);\n            userpanel.setVisible(false)\n            const groups = await this.getGroupByWord(userID);\n            console.log(groups.value.length)\n            if(groups.value.length === 0){\n                MessageToast.show(\"There are no groups that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n\n                //Kan meerdere in lijst zitten maar niet getoond worden omdat er altijd 2 inzitten => Group en Group 2.\n                //Group matches exact maar toch 2 in lijst.\n            } else if(groups.value.length > 1 ){\n                let exactMatch = false;\n    \n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    \n                    return;\n\n                }else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\"); \n                }\n            \n               \n\n\n                //IN ORDE \n            } else if(groups.value.length === 1){\n                console.log(groups.value[0])\n                if(groups.value[0] === \"Group not found\"){\n                    return;\n                }\n                else if(groups.value[0].displayName === userID){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    return;\n                } else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\");\n                }\n            }\n                \n        \n        \n\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            grouptable.setVisible(false);\n            grouppanel.setVisible(false);\n                \n            const users = await this.getUserByWord(userID);\n            console.log(users)\n            if(users.value.length === 0){\n                MessageToast.show(\"There are no Users that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n            } else if(users.value.length > 1){\n                let exactMatch = false;\n    \n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n                        exactMatch = true;\n                    }\n                });\n\n                if(exactMatch){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                }else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\"); \n                }\n\n            } else if (users.value.length === 1){\n                console.log(users.value[0])\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                }\n                else if(users.value[0].id === userID){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                } else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\");\n                }\n                \n            }\n            \n        } \n    }\n    \n\n    public async setUser(userID: any){\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        const user: any = await this.getIASUser(userID);\n            \n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await this.getRolecollectionRoles(roleCollection); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            const oJSONModel = new JSONModel({ value: result });\n            this.getView().setModel(oJSONModel, \"groupdetails\");\n\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        }   \n\n        \n        \n       \n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async setGroup(userID: any){\n        const group = await this.getGroup(userID);\n        console.log(group)\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await this.getGroupRoles(group.value[0].displayName);\n        for (const roleCollection of rolecolltions) {\n            const response = await this.getRolecollectionRoles(roleCollection); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }\n        \n        const oJSONModel = new JSONModel({ value: result });\n        this.getView().setModel(oJSONModel, \"rolecollectiondetails\");   \n\n\n\n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async getGroupRoles(groupName: string){\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n\n    public async getGroup(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    public async getGroupByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByWord(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n    public async getUserByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getUserByWord(...)`, undefined, {});\n            oBinding.setParameter(\"id\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n\n\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n        console.log(userdata)\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n\n    public async getRoleCollections(){\n        try {\n\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        console.log(userID)\n        this.setUser(userID);\n\n        \n    }\n\n    public onExportUser(): void {\n        const oView = this.getView();\n        \n        const oUserModel = oView.getModel(\"userModel\") as JSONModel;\n        const oUserData = oUserModel?.getData() || {};\n        console.log(oUserData)\n        const oGroupModel = oView.getModel(\"groupdetails\") as JSONModel;\n        const oGroupData = oGroupModel?.getData() || {};\n    \n        const aCombinedData: any[] = [];\n    \n        const userData = {\n            \"User ID\": oUserData.id || \"\",\n            \"User Name\": oUserData.userName || \"\",\n            \"Full Name\": `${oUserData.name?.givenName || \"\"} ${oUserData.name?.familyName || \"\"}`,\n            \"Email\": oUserData.emails?.[0]?.value || \"\",\n            \"User Type\": oUserData.userType || \"\",\n            \"User UUID\": oUserData.userUuid || \"\",\n            \"Login Time\": oUserData.loginTime || \"\",\n            \"Password Status\": oUserData.passwordStatus || \"\",\n            \"Mail Verified\": oUserData.mailVerified || \"\",\n            \"Source System\": oUserData.sourceSystem || \"\",\n        };\n    \n        Object.entries(oGroupData.value || {}).forEach(([groupName, roleCollections]) => {\n            if (typeof roleCollections === \"object\" && roleCollections !== null && Object.keys(roleCollections).length > 0) {\n                Object.entries(roleCollections).forEach(([roleCollectionName, roles]) => {\n                    const aRoles = Array.isArray(roles) ? roles : [roles];\n                    aRoles.forEach((role) => {\n                        aCombinedData.push({\n                            \"Group\": groupName,\n                            \"Role Collection\": roleCollectionName,\n                            \"Role\": role\n                        });\n                    });\n                });\n            }\n        });\n        aCombinedData[0] = { ...aCombinedData[0], ...userData };        \n        console.log(aCombinedData[0]); \n    \n        const aCombinedColumns = [\n            { label: \"User ID\", property: \"User ID\" },\n            { label: \"User Name\", property: \"User Name\" },\n            { label: \"Full Name\", property: \"Full Name\" },\n            { label: \"Email\", property: \"Email\" },\n            { label: \"User Type\", property: \"User Type\" },\n            { label: \"User UUID\", property: \"User UUID\" },\n            { label: \"Login Time\", property: \"Login Time\" },\n            { label: \"Password Status\", property: \"Password Status\" },\n            { label: \"Mail Verified\", property: \"Mail Verified\" },\n            { label: \"Source System\", property: \"Source System\" },\n            { label: \"Group\", property: \"Group\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aCombinedColumns  \n            },\n            dataSource: Array.isArray(aCombinedData) && aCombinedData.length > 0 ? aCombinedData : [],  \n            fileName: `export.xlsx`  \n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings); \n            oSpreadsheet.build()  \n                .finally(() => oSpreadsheet.destroy());  \n        } catch (error) {\n            console.error(\"Export failed:\", error);  \n        }\n    }\n\n\n\n    public onExportGroup(): void {\n        const oView = this.getView();\n        const oUserModel = oView.getModel(\"groupModel\") as JSONModel;\n        const oGroupData = oUserModel?.getData() || {};\n        const oMembersModel = oView.getModel(\"groupMembersModel\") as JSONModel;\n        const oMembersData = oMembersModel?.getData() || {};\n        const oRolecollectionModel = oView.getModel(\"rolecollectiondetails\") as JSONModel;\n        const oRolecollectionData = oRolecollectionModel?.getData() || {};\n    \n        const roleCollections = oRolecollectionData.value || [];\n        const groupMembers = oGroupData.members || [];\n    \n        let aExcelData: any[] = [];\n        const maxLength = Math.max(groupMembers.length, Object.keys(roleCollections).length);\n    \n        for (let i = 0; i < maxLength; i++) {\n            aExcelData.push({\n                id: i === 0 ? oGroupData.id || \"\" : \"\", // Only show Group ID in the first row\n                GroupName: i === 0 ? oGroupData.displayName || \"\" : \"\", // Only show Group Name in the first row\n                UserID: groupMembers[i]?.value || \"\", \n                \"Display Name\": groupMembers[i]?.display || \"\", \n                \"Role Collection\": Object.keys(roleCollections)[i] || \"\", \n                Role: roleCollections[Object.keys(roleCollections)[i]]?.join(\", \") || \"\" // Join roles in case of multiple\n            });\n        }\n    \n        const aColumns = [\n            { label: \"Group ID\", property: \"id\" },\n            { label: \"Group Name\", property: \"GroupName\" },\n            { label: \"UserID\", property: \"UserID\" },\n            { label: \"Display Name\", property: \"Display Name\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aColumns\n            },\n            dataSource: aExcelData,\n            fileName: `Groups_Export.xlsx`\n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings);\n            oSpreadsheet.build().finally(() => oSpreadsheet.destroy());\n        } catch (error) {\n            console.error(\"Export failed:\", error);\n        }\n    }\n    \n    \n\n   \n\n\n\n}"],"mappings":"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","ignoreList":[]}