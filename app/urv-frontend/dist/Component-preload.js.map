{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["createDeviceModel","___model_models","Component","BaseComponent","extend","metadata","manifest","interfaces","init","_init","BaseComponent.prototype.init.call","this","setModel","getRouter","initialize"],"sources":["Component.ts"],"sourcesContent":["import BaseComponent from \"sap/ui/core/UIComponent\";\nimport { createDeviceModel } from \"./model/models\";\n\n/**\n * @namespace urvfrontend\n */\nexport default class Component extends BaseComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n        interfaces: [\n            \"sap.ui.core.IAsyncContentCreation\"\n        ]\n\t};\n\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n        // set the device model\n        this.setModel(createDeviceModel(), \"device\");\n\n        // enable routing\n        this.getRouter().initialize();\n\t}\n}"],"mappings":"AAAA,yGACSA,EAAiBC,EAAA,qBAE1B,MAGqBC,EAAkBC,EAAaC,OAAA,yBAErCC,SAAW,CACxBC,SAAU,OACJC,WAAY,CACR,sCAIJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGMA,KAAKC,SAASZ,IAAqB,UAGnCW,KAAKE,YAAYC,YACxB,IAAC,OAlBmBZ,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["App","Controller","extend","onInit","_onInit"],"sources":["App.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class App extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n}"],"mappings":"AAAA,mFAEA,MAGqBA,EAAYC,EAAUC,OAAA,8BAGhCC,OAAM,SAAAC,IAEb,IAAC,OALgBJ,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"Overview.controller.js","names":["Overview","Controller","extend","onInit","_onInit","getUser","async","_getUser","userInput","this","getView","byId","userID","getValue","MessageToast","show","user","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","map","_ref","group","value","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","_setDataToTree","data","treeformat","_ref2","groupName","icon","children","_ref3","roleCollectionName","setModel","JSONModel","tree","_setUserDetails","oModel","getModel","setData","_getUserCollectionsViaGroup","userGroups","groups","display","roleCollectionsData","getRoleCollections","groupRoleCollections","forEach","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getIASUser","userid","oBinding","bindContext","undefined","setParameter","execute","then","oContext","getBoundContext","getObject","catch","oError","console","error","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","event","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","log"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n        \n    }\n\n    \n\n\n    public async getUser() {\n\n        //delete na testen\n        // const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n        // const oBinding = oModel.bindContext(\"/getIASUsers(...)\", undefined, {});\n\n        // oBinding.execute()\n        //     .then(() => {\n        //         const oContext = oBinding.getBoundContext();\n        //         if (!oContext) {\n        //             console.error(\"Function execution returned an undefined context!\");\n        //             return;\n        //         }\n        //         const aUsers = oContext.getObject();\n        //     })\n        //     .catch((oError: any) => {\n        //         console.error(\"Error fetching IAS Users:\", oError);\n        // });\n        \n\n\n\n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const user: any = await this.getIASUser(userID);\n        const userdata = user[0]\n        //const userGroups = userdata.groups.map((group: any) => group.display); //groups deftig zetten \n        //this.getRolecollectionRoles(\"AuthGroup.Content.Admin\") //test (delete erna)\n        this.setUserDetails(userdata);\n        const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n\n        const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n            group, \n            roleCollections: value\n\n        }));\n\n        const result: any = {}\n        for (const { group, roleCollections } of formattedData) {\n            result[group] = {}; \n    \n            for (const roleCollection of roleCollections) {\n                const response = await this.getRolecollectionRoles(roleCollection); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[group][roleCollection] = roles;\n        }\n        this.setDataToTree(result);\n\n    }\n}\n\n\n\npublic setDataToTree(data: any) {\n    const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n        name: groupName,\n        icon: \"sap-icon://group\", \n        children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",  \n            children: (roles || []).map((role: string) => ({ \n                name: role,\n                icon: \"sap-icon://role\"  \n            }))\n        }))\n    }));\n    \n    this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n}\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    \n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n            // const model = this.getOwnerComponent()?.getModel() as ODataModel;\n            // const bookBinding = model.getKeepAliveContext(`/getIASUser(id='${userid}')`);\n                \n            // const response = await fetch(`/odata/v4/catalog/getIASUser(id='${userid}')`);\n            \n    \n            // const data = await response.json();\n            // return data;\n    \n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n    // public async getUsers() {\n    //     try {\n    //         const response = await fetch(\"/odata/v4/catalog/getIASUsers\");\n    //         if (!response.ok) {\n    //             throw new Error(`Error: ${response.status}`);\n    //         }\n    //         const data = await response.json();\n    //     } catch (error) {\n    //         console.error(\"Error:\", error);\n    //     }\n    // } \n\n    public async getRoleCollections(){\n        try {\n            // const response = await fetch(\"/odata/v4/catalog/getRoleCollections\");\n            // if (!response.ok) {\n            //     throw new Error(`Error: ${response.status}`);\n            // }\n            // const data = await response.json();\n            // return data;\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            // const response = await fetch(`/odata/v4/catalog/getRoleCollectionRoles(roleCollectionName='${roleCollection}')`);\n            // if (!response.ok) {\n            //     throw new Error(`Error: ${response.status}`);\n            // }\n            // const data = await response.json();\n            // return data;\n\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        \n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    \n\n\n}"],"mappings":"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","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":14,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","model","JSONModel","Device","setDefaultBindingMode","__exports","__esModule"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Device from \"sap/ui/Device\";\n\nexport function createDeviceModel () {\n    const model = new JSONModel(Device);\n    model.setDefaultBindingMode(\"OneWay\");\n    return model;\n}"],"mappings":"AAAA,sGAGO,SAASA,IACZ,MAAMC,EAAQ,IAAIC,EAAUC,GAC5BF,EAAMG,sBAAsB,UAC5B,OAAOH,CACX,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAL,oBAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":17,"column":0},"map":{"version":3,"file":"dataService.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"service"}}]}