{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["createDeviceModel","___model_models","Component","BaseComponent","extend","metadata","manifest","interfaces","init","_init","BaseComponent.prototype.init.call","this","setModel","getRouter","initialize"],"sources":["Component.ts"],"sourcesContent":["import BaseComponent from \"sap/ui/core/UIComponent\";\nimport { createDeviceModel } from \"./model/models\";\n\n/**\n * @namespace urvfrontend\n */\nexport default class Component extends BaseComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n        interfaces: [\n            \"sap.ui.core.IAsyncContentCreation\"\n        ]\n\t};\n\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n        // set the device model\n        this.setModel(createDeviceModel(), \"device\");\n\n        // enable routing\n        this.getRouter().initialize();\n\t}\n}"],"mappings":"AAAA,yGACSA,EAAiBC,EAAA,qBAE1B,MAGqBC,EAAkBC,EAAaC,OAAA,yBAErCC,SAAW,CACxBC,SAAU,OACJC,WAAY,CACR,sCAIJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGMA,KAAKC,SAASZ,IAAqB,UAGnCW,KAAKE,YAAYC,YACxB,IAAC,OAlBmBZ,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["App","Controller","extend","onInit","_onInit"],"sources":["App.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class App extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n}"],"mappings":"AAAA,mFAEA,MAGqBA,EAAYC,EAAUC,OAAA,8BAGhCC,OAAM,SAAAC,IAEb,IAAC,OALgBJ,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"Overview.controller.js","names":["dataService","_interopRequireDefault","__dataService","exportService","__exportService","Overview","Controller","extend","onInit","_onInit","document","addEventListener","this","onKeyDown","bind","view","getView","initialModels","tablegroups","tableusers","groupdetails","rolecollectiondetails","TreeModel","TreeModel2","userModel","groupModel","groupMembersModel","Object","entries","forEach","_ref","name","data","oJSONModel","JSONModel","setModel","_onKeyDown","event","key","getData","_getData","userInput","getUserInput","trim","MessageToast","show","searchMode","getSearchmode","HandleGroupSearch","HandleUserSearch","showBusy","_showBusy","BusyIndicator","hideBusy","_hideBusy","hide","_getUserInput","byId","getValue","_getSearchmode","selectinput","getSelectedItem","mProperties","async","_HandleGroupSearch","groupID","groups","getGroupByWord","undefined","value","length","clearJsonModel","displayName","setGroup","group","error","_HandleUserSearch","userID","users","getUserByWord","id","setUser","user","_clearJsonModel","modelName","clearAllJsonModels","_clearAllJsonModels","modelNames","model","getModel","setData","onHandleSearchmodeChange","_onHandleSearchmodeChange","searchmode","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","map","_ref2","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","setRoleCollectionDataToTree","_setGroup","getGroup","userpanel","grouppanel","setGroupDetails","members","rolecolltions","getGroupRoles","setGroupDataToTree","_setRoleCollectionDataToTree","treeformat","_ref3","groupName","icon","children","_ref4","roleCollectionName","tree","_setGroupDataToTree","_ref5","console","log","_setUserDetails","oModel","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","roleCollectionsData","getRoleCollections","groupRoleCollections","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","onSearch","_onSearch","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onGroupPress","_onGroupPress","oSelectedItem","oContext","oGroupData","getObject","onUserPress","_onUserPress","oUserData","onExportUser","_onExportUser","oView","onExportGroup","_onExportGroup"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport dataService from \"../service/dataService\"; \nimport exportService from \"../service/exportService\"; \nimport BusyIndicator from \"sap/ui/core/BusyIndicator\";\n\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        const view = this.getView();\n        const initialModels: Record<string, any> = {\n            tablegroups: {  },\n            tableusers: {  },\n            groupdetails: {  },\n            rolecollectiondetails: { },\n            TreeModel: { },\n            TreeModel2: { },\n            userModel: {},\n            groupModel: {},\n            groupMembersModel: {  }\n        };\n\n        Object.entries(initialModels).forEach(([name, data]) => {\n            const oJSONModel = new JSONModel(data);\n            view?.setModel(oJSONModel, name);\n        });\n    }\n\n        //Search for data when enter is pressed.\n    private onKeyDown(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            this.getData();\n        }\n    }\n    \n    \n    public getData() {\n        const userInput = this.getUserInput();\n        if (userInput.trim() === \"\") { MessageToast.show(\"Please enter a valid ID\"); return } \n\n\n        const searchMode = this.getSearchmode();\n        if (searchMode === \"group\") {\n            this.HandleGroupSearch(userInput);\n        } else if (searchMode === \"user\") {\n            this.HandleUserSearch(userInput);\n        }\n    }\n\n    private showBusy(): void {\n        BusyIndicator.show(0); \n    }\n\n    private hideBusy(): void {\n        BusyIndicator.hide();\n    }\n\n    public getUserInput(){\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        return userInput.getValue();\n    }\n\n    public getSearchmode() {\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        return selectinput.getSelectedItem().mProperties.key;\n    }\n\n\n    public async HandleGroupSearch(groupID: string) {\n        this.showBusy();\n\n        try{        \n            const groups = await dataService.getGroupByWord(groupID, this.getView());\n            if (groups === undefined) {\n                return MessageToast.show(`There went something wrong while trying to fetch the groups`);\n            } else if (groups.value.length === 0) {\n                this.clearJsonModel(\"tablegroups\");\n                return MessageToast.show(`No groups found for \"${groupID}\"`);\n            }else if (groups.value.length === 1){\n                if(groups.value[0] === \"Group not found\"){\n                    return MessageToast.show(`No groups found for \"${groupID}\"`);\n                //exact match => set group directly\n                } else if(groups.value[0].displayName === groupID){\n                    this.setGroup(groupID);\n                    return;\n                //Set groups in table so user can choose\n                } else{\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView()?.setModel(oJSONModel, \"tablegroups\"); \n                    return;\n                }\n            } else if (groups.value.length > 1){\n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === groupID) {\n                        this.setGroup(groupID);\n                        return;\n                    }\n                });\n                const oJSONModel = new JSONModel({ value: groups.value });\n                this.getView()?.setModel(oJSONModel, \"tablegroups\"); \n                return;\n            }\n        } catch (error) {\n            MessageToast.show(`Error fetching groups: ${error}`);\n        } finally {\n            this.hideBusy();\n        }\n    }\n\n    public async HandleUserSearch(userID: string){\n        this.showBusy()\n        try{\n            const users = await dataService.getUserByWord(userID, this.getView());\n            if (users === undefined) {\n                return MessageToast.show(`There went something wrong while trying to fetch the users`);\n            } else if (users.value.length === 0) {\n                this.clearJsonModel(\"tableusers\");\n                return MessageToast.show(`No users found for \"${userID}\"`);\n            } else if (users.value.length === 1){\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                } else if(users.value[0].id === userID){\n                    this.setUser(userID)\n                    return;\n                } else{\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView()?.setModel(oJSONModel, \"tableusers\");\n                }\n            }else if(users.value.length > 1){\n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n\n                        return;\n                    }\n                });\n                const oJSONModel = new JSONModel({ value: users.value });\n                this.getView()?.setModel(oJSONModel, \"tableusers\"); \n            }\n        } catch (error) {\n        MessageToast.show(`Error fetching groups: ${error}`);\n        } finally {\n        this.hideBusy();\n    }\n    }\n    \n    public clearJsonModel(modelName: string): void{\n        const oJSONModel = new JSONModel({ value: null });\n        this.getView()?.setModel(oJSONModel, modelName);\n    }\n\n\n    public clearAllJsonModels(): void {\n        const view = this.getView();\n        const modelNames = [\n        \"tablegroups\",\n        \"tableusers\",\n        \"groupdetails\",\n        \"rolecollectiondetails\",\n        \"TreeModel\",\n        \"TreeModel2\",\n        \"userModel\",\n        \"groupModel\",\n        \"groupMembersModel\"\n        ];\n        modelNames.forEach((name) => {\n            const model = view?.getModel(name) as JSONModel;\n            if (model) {\n                model.setData({});\n            }\n        });\n    }\n\n    public onHandleSearchmodeChange(): void {\n        MessageToast.show(\"Search mode changed\");\n        this.clearAllJsonModels();\n        const searchmode = this.getSearchmode();\n\n        if(searchmode === \"group\"){\n\n        } else if (searchmode === \"user\"){\n\n        } else {\n            MessageToast.show(\"This searchmode is not supported\");\n        }\n    }\n\n\n    public async setUser(userID: any){\n       this.showBusy()\n        try{\n\n        \n        const user: any = await dataService.getIASUser(userID, this.getView());\n        const userdata = user[0]\n        this.setUserDetails(userdata);\n\n        const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata);\n        const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n            group, \n            roleCollections: value\n        }));\n        const result: any = {}\n        for (const { group, roleCollections } of formattedData) {\n            result[group] = {}; \n    \n            for (const roleCollection of roleCollections) {\n                const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[group][roleCollection] = roles;\n        }\n        const oJSONModel = new JSONModel({ value: result });\n        this.getView()?.setModel(oJSONModel, \"groupdetails\");        \n        }   \n\n        this.setRoleCollectionDataToTree(result);\n        return;\n    }finally {\n        this.hideBusy();\n    }\n    }\n\n    public async setGroup(userID: any){\n        this.showBusy()\n        try{\n        const group = await dataService.getGroup(userID, this.getView())\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await dataService.getGroupRoles(group.value[0].displayName, this.getView());\n        for (const roleCollection of rolecolltions) {\n            const response = await dataService.getRolecollectionRoles(roleCollection, this.getView()); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }\n        \n        const oJSONModel = new JSONModel({ value: result });\n        this.getView()?.setModel(oJSONModel, \"rolecollectiondetails\");   \n\n\n\n        this.setGroupDataToTree(result);\n        \n        return;\n        }finally {\n            this.hideBusy();\n        }\n    }\n\n\n    public setRoleCollectionDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setGroupDataToTree(data: Record<string, string[]>) {\n        try{\n            \n            const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n                    name: roleCollectionName,\n                    icon: \"sap-icon://manager\",\n                    children: roles.map((role: string) => ({\n                        name: role,\n                        icon: \"sap-icon://role\"\n                    }))\n                }));\n            this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n        }catch(error ) {\n            console.log(error)\n        }\n        \n    }\n\n     \n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await dataService.getRoleCollections(this.getView());\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n\n        tree.expandToLevel(999); \n\n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    \n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n\n\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        this.setUser(userID);\n    }\n\n    public onExportUser(): void {\n        const oView = this.getView();\n        exportService.onExportUser(oView);\n        \n    }\n\n\n\n    public onExportGroup(): void {\n        const oView = this.getView();\n        exportService.onExportGroup(oView);\n        \n    }\n    \n\n}"],"mappings":"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","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":14,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","model","JSONModel","Device","setDefaultBindingMode","__exports","__esModule"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Device from \"sap/ui/Device\";\n\nexport function createDeviceModel () {\n    const model = new JSONModel(Device);\n    model.setDefaultBindingMode(\"OneWay\");\n    return model;\n}"],"mappings":"AAAA,sGAGO,SAASA,IACZ,MAAMC,EAAQ,IAAIC,EAAUC,GAC5BF,EAAMG,sBAAsB,UAC5B,OAAOH,CACX,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAL,oBAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":17,"column":0},"map":{"version":3,"file":"dataService.js","names":["dataService","getGroup","id","oView","selectinput","byId","selectedvalue","getSelectedItem","console","log","oModel","getModel","oBinding","bindContext","undefined","setParameter","mProperties","key","data","execute","then","oContext","getBoundContext","group","getObject","catch","oError","error","getRolecollectionRoles","roleCollection","user","getRoleCollections","getIASUser","userid","value","getGroupByWord","getUserByWord","getGroupRoles","groupName","roleCollectionsData","roleCollections","matchedRoles","forEach","groupReferences","samlAttributeAssignment","roleGroups","map","grp","attributeValue","saml","includes","push","name"],"sources":["dataService.ts"],"sourcesContent":["// /model/MyService.ts\nimport { ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\n\nexport default class dataService {\n    \n    \n\n    static async getGroup(id: string, oView: any){\n        try {\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n            console.log(\"hfqsdjklhfjkqslhdfjkqlshdfjklqsmhdfjkSDHJKQSL\")\n\n            const oModel = oView?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n\n    static async getRolecollectionRoles(roleCollection: string, oView: any){\n        try {\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n\n            const oModel = oView.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    \n    static async getRoleCollections(oView: any){\n        try {\n\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n\n            const oModel = oView.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n\n    static async getIASUser(userid: string, oView: any) {\n        try {\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n\n            const oModel = oView.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n    static async getGroupByWord(id: string, oView: any){\n        try {\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n            const oModel = oView.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByWord(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n    static async getUserByWord(id: string, oView: any){\n        try {\n            const selectinput = oView?.byId(\"selectCIS\") as sap.m.select;\n            const selectedvalue = selectinput.getSelectedItem();\n            console.log(selectedvalue.mProperties.key)\n\n            const oModel = oView.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getUserByWord(...)`, undefined, {});\n            oBinding.setParameter(\"id\", id);\n            oBinding.setParameter(\"btp\", selectedvalue.mProperties.key);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n\n    static async getGroupRoles(groupName: string, oView: any){\n        \n        const roleCollectionsData = await dataService.getRoleCollections(oView);\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n}"],"mappings":"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","ignoreList":[],"sourceRoot":"service"}},{"offset":{"line":20,"column":0},"map":{"version":3,"file":"exportService.js","names":["exportService","onExportUser","oView","oUserModel","getModel","oUserData","getData","oGroupModel","oGroupData","aCombinedData","userData","id","userName","name","givenName","familyName","Email","emails","value","userType","userUuid","loginTime","passwordStatus","mailVerified","sourceSystem","Object","entries","forEach","_ref","groupName","roleCollections","keys","length","_ref2","roleCollectionName","roles","aRoles","Array","isArray","role","push","Group","Role","console","log","aCombinedColumns","label","property","oSettings","workbook","columns","dataSource","fileName","oSpreadsheet","Spreadsheet","build","finally","destroy","error","onExportGroup","oMembersModel","oMembersData","oRolecollectionModel","oRolecollectionData","groupMembers","members","aExcelData","maxLength","Math","max","i","GroupName","displayName","UserID","display","join","aColumns"],"sources":["exportService.ts"],"sourcesContent":["// /model/MyService.ts\nimport { ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport Spreadsheet from \"sap/ui/export/Spreadsheet\";\n\nexport default class exportService {\n    \n    \n\n    static onExportUser(oView: any): void {\n        \n        const oUserModel = oView.getModel(\"userModel\") as JSONModel;\n        const oUserData = oUserModel?.getData() || {};\n        \n        const oGroupModel = oView.getModel(\"groupdetails\") as JSONModel;\n        const oGroupData = oGroupModel?.getData() || {};\n    \n        const aCombinedData: any[] = [];\n    \n        const userData = {\n            \"User ID\": oUserData.id || \"\",\n            \"User Name\": oUserData.userName || \"\",\n            \"Full Name\": `${oUserData.name?.givenName || \"\"} ${oUserData.name?.familyName || \"\"}`,\n            \"Email\": oUserData.emails?.[0]?.value || \"\",\n            \"User Type\": oUserData.userType || \"\",\n            \"User UUID\": oUserData.userUuid || \"\",\n            \"Login Time\": oUserData.loginTime || \"\",\n            \"Password Status\": oUserData.passwordStatus || \"\",\n            \"Mail Verified\": oUserData.mailVerified || \"\",\n            \"Source System\": oUserData.sourceSystem || \"\",\n        };\n    \n        Object.entries(oGroupData.value || {}).forEach(([groupName, roleCollections]) => {\n            if (typeof roleCollections === \"object\" && roleCollections !== null && Object.keys(roleCollections).length > 0) {\n                Object.entries(roleCollections).forEach(([roleCollectionName, roles]) => {\n                    const aRoles = Array.isArray(roles) ? roles : [roles];\n                    aRoles.forEach((role) => {\n                        aCombinedData.push({\n                            \"Group\": groupName,\n                            \"Role Collection\": roleCollectionName,\n                            \"Role\": role\n                        });\n                    });\n                });\n            }\n        });\n        aCombinedData[0] = { ...aCombinedData[0], ...userData };        \n        console.log(aCombinedData[0]); \n    \n        const aCombinedColumns = [\n            { label: \"User ID\", property: \"User ID\" },\n            { label: \"User Name\", property: \"User Name\" },\n            { label: \"Full Name\", property: \"Full Name\" },\n            { label: \"Email\", property: \"Email\" },\n            { label: \"User Type\", property: \"User Type\" },\n            { label: \"User UUID\", property: \"User UUID\" },\n            { label: \"Login Time\", property: \"Login Time\" },\n            { label: \"Password Status\", property: \"Password Status\" },\n            { label: \"Mail Verified\", property: \"Mail Verified\" },\n            { label: \"Source System\", property: \"Source System\" },\n            { label: \"Group\", property: \"Group\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aCombinedColumns  \n            },\n            dataSource: Array.isArray(aCombinedData) && aCombinedData.length > 0 ? aCombinedData : [],  \n            fileName: `export.xlsx`  \n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings); \n            oSpreadsheet.build()  \n                .finally(() => oSpreadsheet.destroy());  \n        } catch (error) {\n            console.error(\"Export failed:\", error);  \n        }\n    }\n\n\n    \n    static onExportGroup(oView: any): void {\n        \n        const oUserModel = oView.getModel(\"groupModel\") as JSONModel;\n        const oGroupData = oUserModel?.getData() || {};\n        const oMembersModel = oView.getModel(\"groupMembersModel\") as JSONModel;\n        const oMembersData = oMembersModel?.getData() || {};\n        const oRolecollectionModel = oView.getModel(\"rolecollectiondetails\") as JSONModel;\n        const oRolecollectionData = oRolecollectionModel?.getData() || {};\n    \n        const roleCollections = oRolecollectionData.value || [];\n        const groupMembers = oGroupData.members || [];\n    \n        let aExcelData: any[] = [];\n        const maxLength = Math.max(groupMembers.length, Object.keys(roleCollections).length);\n    \n        for (let i = 0; i < maxLength; i++) {\n            aExcelData.push({\n                id: i === 0 ? oGroupData.id || \"\" : \"\", // Only show Group ID in the first row\n                GroupName: i === 0 ? oGroupData.displayName || \"\" : \"\", // Only show Group Name in the first row\n                UserID: groupMembers[i]?.value || \"\", \n                \"Display Name\": groupMembers[i]?.display || \"\", \n                \"Role Collection\": Object.keys(roleCollections)[i] || \"\", \n                Role: roleCollections[Object.keys(roleCollections)[i]]?.join(\", \") || \"\" // Join roles in case of multiple\n            });\n        }\n    \n        const aColumns = [\n            { label: \"Group ID\", property: \"id\" },\n            { label: \"Group Name\", property: \"GroupName\" },\n            { label: \"UserID\", property: \"UserID\" },\n            { label: \"Display Name\", property: \"Display Name\" },\n            { label: \"Role Collection\", property: \"Role Collection\" },\n            { label: \"Role\", property: \"Role\" }\n        ];\n    \n        const oSettings = {\n            workbook: {\n                columns: aColumns\n            },\n            dataSource: aExcelData,\n            fileName: `Groups_Export.xlsx`\n        };\n    \n        try {\n            const oSpreadsheet = new Spreadsheet(oSettings);\n            oSpreadsheet.build().finally(() => oSpreadsheet.destroy());\n        } catch (error) {\n            console.error(\"Export failed:\", error);\n        }\n    }\n\n   \n\n\n\n\n\n\n\n    \n    \n\n\n\n  \n}"],"mappings":"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","ignoreList":[],"sourceRoot":"service"}}]}