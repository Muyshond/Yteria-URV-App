{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["createDeviceModel","___model_models","Component","BaseComponent","extend","metadata","manifest","interfaces","init","_init","BaseComponent.prototype.init.call","this","setModel","getRouter","initialize"],"sources":["Component.ts"],"sourcesContent":["import BaseComponent from \"sap/ui/core/UIComponent\";\nimport { createDeviceModel } from \"./model/models\";\n\n/**\n * @namespace urvfrontend\n */\nexport default class Component extends BaseComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n        interfaces: [\n            \"sap.ui.core.IAsyncContentCreation\"\n        ]\n\t};\n\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n        // set the device model\n        this.setModel(createDeviceModel(), \"device\");\n\n        // enable routing\n        this.getRouter().initialize();\n\t}\n}"],"mappings":"AAAA,yGACSA,EAAiBC,EAAA,qBAE1B,MAGqBC,EAAkBC,EAAaC,OAAA,yBAErCC,SAAW,CACxBC,SAAU,OACJC,WAAY,CACR,sCAIJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGMA,KAAKC,SAASZ,IAAqB,UAGnCW,KAAKE,YAAYC,YACxB,IAAC,OAlBmBZ,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["App","Controller","extend","onInit","_onInit"],"sources":["App.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class App extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n}"],"mappings":"AAAA,mFAEA,MAGqBA,EAAYC,EAAUC,OAAA,8BAGhCC,OAAM,SAAAC,IAEb,IAAC,OALgBJ,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"Overview.controller.js","names":["Overview","Controller","extend","onInit","_onInit","getUser","async","_getUser","userpanel","this","getView","byId","grouppanel","grouptable","usertable","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","key","setVisible","groups","getGroupByWord","console","log","value","length","exactMatch","forEach","group","displayName","setGroup","oJSONModel","JSONModel","setModel","users","getUserByWord","user","id","setUser","_setUser","getIASUser","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","map","_ref","roleCollections","result","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","role","name","setDataToTree","setDataToTree2","_setGroup","getGroup","setGroupDetails","members","undefined","rolecolltions","getGroupRoles","_getGroupRoles","groupName","roleCollectionsData","getRoleCollections","matchedRoles","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getGroup","oModel","getModel","oBinding","bindContext","setParameter","data","execute","then","oContext","getBoundContext","getObject","catch","oError","error","_getGroupByWord","_getUserByWord","_setDataToTree","treeformat","_ref2","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","display","groupRoleCollections","_getIASUser","userid","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","event","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2","onGroupPress","_onGroupPress","oSelectedItem","oGroupData","onUserPress","_onUserPress","oUserData","onExportToExcel","_onExportToExcel","tableId","modelName","fileName","oTable","aData","aColumns","getColumns","oColumn","oLabel","getHeader","label","getText","property","getCells","getBinding","getPath","oSettings","workbook","columns","dataSource","oSpreadsheet","Spreadsheet","build","finally","destroy","onExportUsers","_onExportUsers","onExportGroups","_onExportGroups","onExportGroupMembers","_onExportGroupMembers"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\nimport { foreach } from \"@sap/cds\";\nimport Spreadsheet from \"sap/ui/export/Spreadsheet\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n      \n    }\n\n    \n\n\n    public async getUser() {\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n        const grouptable = this.getView()?.byId(\"grouptable\") as sap.m.panel;\n        const usertable = this.getView()?.byId(\"usertable\") as sap.m.panel;\n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            usertable.setVisible(false);\n            userpanel.setVisible(false)\n            const groups = await this.getGroupByWord(userID);\n            console.log(groups.value.length)\n            if(groups.value.length === 0){\n                MessageToast.show(\"There are no groups that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n\n                //Kan meerdere in lijst zitten maar niet getoond worden omdat er altijd 2 inzitten => Group en Group 2.\n                //Group matches exact maar toch 2 in lijst.\n            } else if(groups.value.length > 1 ){\n                let exactMatch = false;\n    \n                groups.value.forEach((group: { displayName: string }) => {\n                    if (group.displayName === userID) {\n                        exactMatch = true;\n                    }\n                });\n                console.log(exactMatch + \" juist = ok\")\n\n                if(exactMatch){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    \n                    return;\n\n                }else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\"); \n                }\n            \n               \n\n\n                //IN ORDE \n            } else if(groups.value.length === 1){\n                console.log(groups.value[0])\n                if(groups.value[0] === \"Group not found\"){\n                    return;\n                }\n                else if(groups.value[0].displayName === userID){\n                    this.setGroup(userID);\n                    grouptable.setVisible(false);\n                    return;\n                } else{\n                    grouppanel.setVisible(false);\n                    grouptable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: groups.value });\n                    this.getView().setModel(oJSONModel, \"tablegroups\");\n                }\n            }\n                \n        \n        \n\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            grouptable.setVisible(false);\n            grouppanel.setVisible(false);\n                \n            const users = await this.getUserByWord(userID);\n            console.log(users)\n            if(users.value.length === 0){\n                MessageToast.show(\"There are no Users that include \" + userID);\n                grouppanel.setVisible(false);\n                grouptable.setVisible(false);\n                userpanel.setVisible(false);\n                usertable.setVisible(false);\n                return;\n            } else if(users.value.length > 1){\n                let exactMatch = false;\n    \n                users.value.forEach((user: { id: string }) => {\n                    if (user.id === userID) {\n                        exactMatch = true;\n                    }\n                });\n                console.log(exactMatch + \" juist = ok\")\n\n                if(exactMatch){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                }else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\"); \n                }\n\n            } else if (users.value.length === 1){\n                console.log(users.value[0])\n                if(users.value[0] === \"User not found\"){\n                    MessageToast.show(\"user not found\")\n                    return;\n                }\n                else if(users.value[0].id === userID){\n                    this.setUser(userID);\n                    usertable.setVisible(false);\n                    return;\n                } else{\n                    userpanel.setVisible(false);\n                    usertable.setVisible(true);\n                    const oJSONModel = new JSONModel({ value: users.value });\n                    this.getView().setModel(oJSONModel, \"tableusers\");\n                }\n                \n            }\n            \n        } \n    }\n    \n\n    public async setUser(userID: any){\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        const user: any = await this.getIASUser(userID);\n            \n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await this.getRolecollectionRoles(roleCollection); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        }   \n\n\n\n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async setGroup(userID: any){\n        const group = await this.getGroup(userID);\n        console.log(group)\n                const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n\n        this.setGroupDetails(group.value[0]);\n        const members = group.value[0].members;\n        if(members !== undefined){\n            const oJSONModel = new JSONModel({ members });\n            this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n            \n        }\n        const result: any = {}\n        const rolecolltions = await this.getGroupRoles(group.value[0].displayName);\n        for (const roleCollection of rolecolltions) {\n            const response = await this.getRolecollectionRoles(roleCollection); \n            const roleCollectionData = response?.value?.[0]; \n            const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n            result[roleCollection] = roles;\n        }   \n\n\n\n        this.setDataToTree2(result);\n        grouppanel.setVisible(true);\n        userpanel.setVisible(false);\n        return;\n    }\n\n    public async getGroupRoles(groupName: string){\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n\n    public async getGroup(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    public async getGroupByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByWord(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n    public async getUserByWord(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getUserByWord(...)`, undefined, {});\n            oBinding.setParameter(\"id\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error catching groups:\", error);\n        }\n    }\n\n\n\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n\n    public async getRoleCollections(){\n        try {\n\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n    onGroupPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tablegroups\"); \n        \n\n        const oGroupData = oContext.getObject() as { displayName: string }; \n        const groupName = oGroupData.displayName; \n\n        this.setGroup(groupName);\n\n        \n    }\n    onUserPress(event: sap.ui.base.Event): void {\n        const oSelectedItem = event.getParameter(\"listItem\") as ColumnListItem; \n        const oContext = oSelectedItem.getBindingContext(\"tableusers\"); \n        \n\n        const oUserData = oContext.getObject() as { id: string }; \n        const userID = oUserData.id; \n        console.log(userID)\n        this.setUser(userID);\n\n        \n    }\n\n\n    public onExportToExcel(tableId: string, modelName: string, fileName: string): void {\n        const oTable = this.byId(tableId) as Table;\n        const oModel = this.getView()?.getModel(modelName) as JSONModel;\n        const aData = oModel.getProperty(\"/value\");\n\n        const aColumns = oTable.getColumns().map((oColumn, index) => {\n            const oLabel = oColumn.getHeader() as any;\n            return {\n                label: oLabel?.getText?.() || `Column ${index + 1}`,\n                property: oTable.getItems()[0]?.getCells()[index]?.getBinding(\"text\")?.getPath() || \"\"\n            };\n        });\n\n        const oSettings = {\n            workbook: { columns: aColumns },\n            dataSource: aData,\n            fileName: `${fileName}.xlsx`\n        };\n\n        const oSpreadsheet = new Spreadsheet(oSettings);\n        oSpreadsheet.build().finally(() => {\n            oSpreadsheet.destroy();\n        });\n    }\n\n\n    public onExportUsers(): void {\n        this.onExportToExcel(\"usersTable\", \"tableusers\", \"Users\");\n    }\n\n    public onExportGroups(): void {\n        this.onExportToExcel(\"groupsTable2\", \"tablegroups\", \"Groups\");\n    }\n\n    public onExportGroupMembers(): void {\n        this.onExportToExcel(\"groupMembersTable\", \"groupMembersModel\", \"Group Members\");\n    }\n\n\n\n}"],"mappings":"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","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":14,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","model","JSONModel","Device","setDefaultBindingMode","__exports","__esModule"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Device from \"sap/ui/Device\";\n\nexport function createDeviceModel () {\n    const model = new JSONModel(Device);\n    model.setDefaultBindingMode(\"OneWay\");\n    return model;\n}"],"mappings":"AAAA,sGAGO,SAASA,IACZ,MAAMC,EAAQ,IAAIC,EAAUC,GAC5BF,EAAMG,sBAAsB,UAC5B,OAAOH,CACX,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAL,oBAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":17,"column":0},"map":{"version":3,"file":"dataService.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"service"}}]}