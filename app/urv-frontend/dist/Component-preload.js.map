{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["createDeviceModel","___model_models","Component","BaseComponent","extend","metadata","manifest","interfaces","init","_init","BaseComponent.prototype.init.call","this","setModel","getRouter","initialize"],"sources":["Component.ts"],"sourcesContent":["import BaseComponent from \"sap/ui/core/UIComponent\";\nimport { createDeviceModel } from \"./model/models\";\n\n/**\n * @namespace urvfrontend\n */\nexport default class Component extends BaseComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n        interfaces: [\n            \"sap.ui.core.IAsyncContentCreation\"\n        ]\n\t};\n\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n        // set the device model\n        this.setModel(createDeviceModel(), \"device\");\n\n        // enable routing\n        this.getRouter().initialize();\n\t}\n}"],"mappings":"AAAA,yGACSA,EAAiBC,EAAA,qBAE1B,MAGqBC,EAAkBC,EAAaC,OAAA,yBAErCC,SAAW,CACxBC,SAAU,OACJC,WAAY,CACR,sCAIJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGMA,KAAKC,SAASZ,IAAqB,UAGnCW,KAAKE,YAAYC,YACxB,IAAC,OAlBmBZ,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["App","Controller","extend","onInit","_onInit"],"sources":["App.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\n\n/**\n * @namespace urvfrontend.controller\n */\nexport default class App extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n}"],"mappings":"AAAA,mFAEA,MAGqBA,EAAYC,EAAUC,OAAA,8BAGhCC,OAAM,SAAAC,IAEb,IAAC,OALgBJ,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"Overview.controller.js","names":["Overview","Controller","extend","onInit","_onInit","getUser","async","_getUser","userpanel","this","getView","byId","grouppanel","userInput","userID","getValue","MessageToast","show","selectinput","selectedvalue","getSelectedItem","mProperties","key","group","getGroup","console","log","value","setVisible","setGroupDetails","members","undefined","oJSONModel","JSONModel","setModel","result","rolecolltions","getGroupRoles","displayName","roleCollection","response","getRolecollectionRoles","roleCollectionData","roles","roleReferences","map","role","name","setDataToTree2","user","getIASUser","length","userdata","setUserDetails","grouprolerelationship","getUserCollectionsViaGroup","formattedData","Object","entries","_ref","roleCollections","setDataToTree","_getGroupRoles","groupName","roleCollectionsData","getRoleCollections","matchedRoles","forEach","groupReferences","samlAttributeAssignment","roleGroups","grp","attributeValue","saml","includes","push","_getGroup","id","oModel","getModel","oBinding","bindContext","setParameter","data","execute","then","oContext","getBoundContext","getObject","catch","oError","error","_setDataToTree","treeformat","_ref2","icon","children","_ref3","roleCollectionName","tree","_setDataToTree2","_ref4","_setUserDetails","setData","_setGroupDetails","groupdata","_getUserCollectionsViaGroup","userGroups","groups","display","groupRoleCollections","_getIASUser","userid","_getRoleCollections","_getRolecollectionRoles","onSearch","_onSearch","event","searchword","getParameter","toLowerCase","expandToLevel","items","getItems","item","setHighlight","context","getBindingContext","index","indexOfItem","getProperty","onSearch2","_onSearch2"],"sources":["Overview.controller.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport { form } from \"sap/ui/layout/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport containsOrEquals from \"sap/ui/dom/containsOrEquals\";\n/**\n * @namespace urvfrontend.controller\n */\nexport default class Overview extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n      \n    }\n\n    \n\n\n    public async getUser() {\n        const userpanel = this.getView()?.byId(\"byUserId\") as sap.m.panel;\n        const grouppanel = this.getView()?.byId(\"bygroup\") as sap.m.panel;\n       \n\n        const userInput = this.getView()?.byId(\"UserID\") as sap.m.Input;\n        const userID = userInput.getValue();\n        if(userID === \"\"){\n            MessageToast.show(\"Please enter a valid ID\");\n            return;\n        }\n        const selectinput = this.getView()?.byId(\"select\") as sap.m.select;\n        const selectedvalue = selectinput.getSelectedItem();\n        //ZOEK OP GROUP\n        if(selectedvalue.mProperties.key === \"group\"){\n            const group = await this.getGroup(userID);\n            console.log(group)\n            if(group.value[0] === \"Group not found\"){\n                MessageToast.show(\"Could not find Group with name \" + userID);\n                grouppanel.setVisible(false);\n                userpanel.setVisible(false);\n                return;\n            }\n            this.setGroupDetails(group.value[0]);\n            const members = group.value[0].members;\n            if(members !== undefined){\n                const oJSONModel = new JSONModel({ members });\n                this.getView()?.setModel(oJSONModel, \"groupMembersModel\");\n                \n            }\n            const result: any = {}\n            const rolecolltions = await this.getGroupRoles(group.value[0].displayName);\n            for (const roleCollection of rolecolltions) {\n                const response = await this.getRolecollectionRoles(roleCollection); \n                const roleCollectionData = response?.value?.[0]; \n                const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n\n                result[roleCollection] = roles;\n            }   \n\n\n\n            this.setDataToTree2(result);\n            grouppanel.setVisible(true);\n            userpanel.setVisible(false);\n        //ZOEK OP USER\n        } else if(selectedvalue.mProperties.key === \"user\"){\n            \n            const user: any = await this.getIASUser(userID);\n            if(user.length === 0){\n                MessageToast.show(\"User with id \" + userID + \" not found.\");\n                grouppanel.setVisible(false);\n                userpanel.setVisible(false);\n                return;\n            }\n            const userdata = user[0]\n            this.setUserDetails(userdata);\n            const grouprolerelationship = await this.getUserCollectionsViaGroup(userdata)\n            const formattedData = Object.entries(grouprolerelationship).map(([group, value]) => ({\n                group, \n                roleCollections: value\n            }));\n            const result: any = {}\n            for (const { group, roleCollections } of formattedData) {\n                result[group] = {}; \n        \n                for (const roleCollection of roleCollections) {\n                    const response = await this.getRolecollectionRoles(roleCollection); \n                    const roleCollectionData = response?.value?.[0]; \n                    const roles = roleCollectionData?.roleReferences?.map((role: any) => role.name) || [];\n    \n                    result[group][roleCollection] = roles;\n            }\n            this.setDataToTree(result);\n            grouppanel.setVisible(false);\n            userpanel.setVisible(true);\n        } \n\n\n\n    }\n    }\n\n\n    public async getGroupRoles(groupName: string){\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const matchedRoles: string[] = [];\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n\n            if (roleGroups.includes(groupName)) {\n                matchedRoles.push(roleCollection.name);\n            }\n        });\n        return matchedRoles;\n    }\n\n\n    public async getGroup(id: string){\n        try {\n\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getGroupByName(...)`, undefined, {});\n            oBinding.setParameter(\"GroupName\", id);\n\n            const data = await oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const group = oContext.getObject();\n                    return group;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching Group:\", oError);\n                    \n                });\n\n            return data;\n\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n\n    public setDataToTree(data: any) {\n        const treeformat = Object.entries(data).map(([groupName, roleCollections]) => ({\n            name: groupName,\n            icon: \"sap-icon://group\", \n            children: Object.entries(roleCollections as Record<string, string[]>).map(([roleCollectionName, roles]) => ({\n                name: roleCollectionName,\n                icon: \"sap-icon://manager\",  \n                children: (roles || []).map((role: string) => ({ \n                    name: role,\n                    icon: \"sap-icon://role\"  \n                }))\n            }))\n        }));\n        \n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel\");\n    }\n\n    public setDataToTree2(data: Record<string, string[]>) {\n        const treeformat = Object.entries(data).map(([roleCollectionName, roles]) => ({\n            name: roleCollectionName,\n            icon: \"sap-icon://manager\",\n            children: roles.map((role: string) => ({\n                name: role,\n                icon: \"sap-icon://role\"\n            }))\n        }));\n\n        this.getView()?.setModel(new JSONModel({ tree: treeformat }), \"TreeModel2\");\n    }\n\n\n\n    public setUserDetails(userdata: any) {\n        let oModel = this.getView()?.getModel(\"userModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"userModel\");\n        }\n        oModel.setData(userdata);\n    }\n\n    public setGroupDetails(groupdata: any) {\n        let oModel = this.getView()?.getModel(\"groupModel\") as JSONModel;\n        if (!oModel) {\n            oModel = new JSONModel();\n            this.getView()?.setModel(oModel, \"groupModel\");\n        }\n        oModel.setData(groupdata);\n    }\n\n\n    public async getUserCollectionsViaGroup(user: any) {\n        const userGroups = user.groups.map((group: any) => group.display);\n        const roleCollectionsData = await this.getRoleCollections();\n        const roleCollections = roleCollectionsData?.value || [];\n        const groupRoleCollections: Record<string, string[]> = {};\n\n        userGroups.forEach((group: any) => {\n            groupRoleCollections[group] = [];\n        });\n\n        roleCollections.forEach((roleCollection: any) => {\n            if (!roleCollection.groupReferences && !roleCollection.samlAttributeAssignment) {\n                return;\n            }\n            const roleGroups = [\n                ...(roleCollection.groupReferences || []).map((grp: any) => grp.attributeValue),\n                ...(roleCollection.samlAttributeAssignment || []).map((saml: any) => saml.attributeValue)\n            ];\n            userGroups.forEach((group: any) => {\n                if (roleGroups.includes(group)) {\n                    groupRoleCollections[group].push(roleCollection.name);\n                }\n            });\n        });\n        return groupRoleCollections\n    }\n\n\n\n    public async getIASUser(userid: string) {\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getIASUser(...)`, undefined, {});\n            oBinding.setParameter(\"id\", userid);\n\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user.value;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching IAS User:\", oError);\n                });\n            return data;\n                \n\n\n        } catch (error) {\n            console.error(\"Error :\", error);\n        }\n    }\n\n\n\n    public async getRoleCollections(){\n        try {\n\n            \n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollections(...)`, undefined, {});\n            \n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collectons:\", oError);\n                });\n\n            return data;\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n        \n    }\n\n    public async getRolecollectionRoles(roleCollection: string){\n        try {\n            const oModel = this.getView()?.getModel() as sap.ui.model.odata.v4.ODataModel;\n            const oBinding = oModel.bindContext(`/getRoleCollectionRoles(...)`, undefined, {});\n            oBinding.setParameter(\"roleCollectionName\", roleCollection);\n            const data = oBinding.execute()\n                .then(() => {\n                    const oContext = oBinding.getBoundContext();\n                    if (!oContext) {\n                        return;\n                    }\n                    const user = oContext.getObject();\n                    return user;\n                })\n                .catch((oError: any) => {\n                    console.error(\"Error fetching role collecton roles:\", oError);\n                });\n            return data;\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n\n    onSearch(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree\") as sap.m.Tree;\n        tree.expandToLevel(999); \n\n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n    onSearch2(event: sap.ui.base.Event): void {\n        const searchword: string = event.getParameter(\"newValue\")?.toLowerCase() || \"\";\n        const tree = this.byId(\"RoleTree2\") as sap.m.Tree;\n        tree.expandToLevel(999); \n        const items = tree.getItems();\n        if (!tree) return;\n        if (!searchword) {\n            items.forEach((item: any) => item.setHighlight(\"None\"));\n            return;\n        }\n        items.forEach((item: any) => {\n            const context = item.getBindingContext(\"TreeModel2\");\n            if (context) {\n                const index = tree.indexOfItem(item);\n                const name: string = context.getProperty(\"name\").toLowerCase();\n                if (name.includes(searchword)) {\n                    console.log(name + searchword)\n                    item.setHighlight(\"Success\")  \n                }else{\n\n                    item.setHighlight(\"None\");\n                    //tree.collapse(index);\n                }\n            }\n        });\n    }\n\n\n\n\n}"],"mappings":"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","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":14,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","model","JSONModel","Device","setDefaultBindingMode","__exports","__esModule"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Device from \"sap/ui/Device\";\n\nexport function createDeviceModel () {\n    const model = new JSONModel(Device);\n    model.setDefaultBindingMode(\"OneWay\");\n    return model;\n}"],"mappings":"AAAA,sGAGO,SAASA,IACZ,MAAMC,EAAQ,IAAIC,EAAUC,GAC5BF,EAAMG,sBAAsB,UAC5B,OAAOH,CACX,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAL,oBAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":17,"column":0},"map":{"version":3,"file":"dataService.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"service"}}]}